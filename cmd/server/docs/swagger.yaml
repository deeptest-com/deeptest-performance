definitions:
  _domain.PageData:
    properties:
      page:
        type: integer
      pageSize:
        type: integer
      result: {}
      total:
        type: integer
    type: object
  _domain.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
      msgKey:
        description: show i118 msg on client side
        type: string
    type: object
  agentDomain.ExecIterator:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.VarKeyValuePair'
        type: array
      dataType:
        $ref: '#/definitions/consts.DataType'
      items:
        description: loop range
        items: {}
        type: array
      processorCategory:
        $ref: '#/definitions/consts.ProcessorCategory'
      processorType:
        $ref: '#/definitions/consts.ProcessorType'
      untilExpression:
        description: loop condition
        type: string
      variableName:
        type: string
    type: object
  agentDomain.ExecLogCheckpoint:
    properties:
      actualResult:
        type: string
      expression:
        type: string
      extractorVariable:
        type: string
      id:
        type: integer
      interfaceId:
        type: integer
      logId:
        type: integer
      operator:
        $ref: '#/definitions/consts.ComparisonOperator'
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      type:
        $ref: '#/definitions/consts.CheckpointType'
      value:
        type: string
    type: object
  agentDomain.ExecLogExtractor:
    properties:
      boundaryEnd:
        type: string
      boundaryIncluded:
        type: boolean
      boundaryIndex:
        type: integer
      boundaryStart:
        type: string
      expression:
        type: string
      id:
        type: integer
      interfaceId:
        type: integer
      key:
        type: string
      logId:
        type: integer
      prop:
        type: string
      result:
        type: string
      src:
        $ref: '#/definitions/consts.ExtractorSrc'
      type:
        $ref: '#/definitions/consts.ExtractorType'
      variable:
        type: string
    type: object
  agentDomain.ExecLogProcessor:
    properties:
      desc:
        type: string
      endTime:
        type: string
      httpStatusCode:
        $ref: '#/definitions/consts.HttpRespCode'
      httpStatusContent:
        type: string
      id:
        type: integer
      interfaceCheckpointsResult:
        items:
          $ref: '#/definitions/agentDomain.ExecLogCheckpoint'
        type: array
      interfaceExtractorsResult:
        items:
          $ref: '#/definitions/agentDomain.ExecLogExtractor'
        type: array
      interfaceId:
        description: for interface
        type: integer
      logs:
        items:
          $ref: '#/definitions/agentDomain.ExecLogProcessor'
        type: array
      name:
        type: string
      output:
        type: string
      parentId:
        type: integer
      processorCategory:
        allOf:
        - $ref: '#/definitions/consts.ProcessorCategory'
        description: type
      processorId:
        type: integer
      processorType:
        allOf:
        - $ref: '#/definitions/consts.ProcessorType'
        description: for processor
      progressStatus:
        $ref: '#/definitions/consts.ProgressStatus'
      reportId:
        type: integer
      reqContent:
        type: string
      respContent:
        type: string
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      startTime:
        type: string
      summary:
        type: string
      useId:
        type: integer
    type: object
  agentDomain.InterfaceStat:
    properties:
      checkpointFail:
        type: integer
      checkpointPass:
        type: integer
      interfaceCount:
        type: integer
      interfaceDurationAverage:
        type: integer
      interfaceDurationTotal:
        description: milliseconds
        type: integer
      interfaceFail:
        type: integer
      interfacePass:
        type: integer
      interfaceSkip:
        type: integer
    type: object
  agentDomain.PlanExecResult:
    properties:
      desc:
        type: string
      environmentId:
        type: integer
      id:
        type: integer
      name:
        type: string
      scenarios:
        items:
          $ref: '#/definitions/agentDomain.ScenarioExecResult'
        type: array
      stat:
        $ref: '#/definitions/agentDomain.InterfaceStat'
    type: object
  agentDomain.Report:
    properties:
      desc:
        type: string
      duration:
        description: 毫秒
        type: integer
      endTime:
        type: string
      execEnv:
        type: string
      failAssertionNum:
        type: integer
      failInterfaceNum:
        type: integer
      failRequestNum:
        type: integer
      failScenarioNum:
        type: integer
      finishProcessorNum:
        type: integer
      id:
        type: integer
      interfaceStatusMap:
        additionalProperties:
          additionalProperties:
            type: integer
          type: object
        type: object
      logs:
        items:
          $ref: '#/definitions/agentDomain.ExecLogProcessor'
        type: array
      name:
        type: string
      passAssertionNum:
        type: integer
      passInterfaceNum:
        type: integer
      passRequestNum:
        type: integer
      passScenarioNum:
        type: integer
      payload: {}
      planId:
        type: integer
      planName:
        type: string
      priority:
        type: string
      progressStatus:
        $ref: '#/definitions/consts.ProgressStatus'
      projectId:
        type: integer
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      scenarioId:
        type: integer
      startTime:
        type: string
      totalAssertionNum:
        type: integer
      totalInterfaceNum:
        type: integer
      totalProcessorNum:
        type: integer
      totalRequestNum:
        type: integer
      totalScenarioNum:
        type: integer
    type: object
  agentDomain.ScenarioExecResult:
    properties:
      break:
        description: for loop break processor
        type: boolean
      cost:
        description: milliseconds
        type: integer
      debugInterfaceId:
        type: integer
      desc:
        type: string
      detail:
        type: string
      endTime:
        type: string
      endpointInterfaceId:
        description: for interface
        type: integer
      environmentId:
        type: integer
      httpStatusCode:
        $ref: '#/definitions/consts.HttpRespCode'
      httpStatusContent:
        type: string
      id:
        type: integer
      iterator:
        allOf:
        - $ref: '#/definitions/agentDomain.ExecIterator'
        description: for loop processor
      logId:
        type: string
      logs:
        items:
          $ref: '#/definitions/agentDomain.ScenarioExecResult'
        type: array
      name:
        type: string
      parentId:
        type: integer
      parentLogId:
        type: string
      postConditions:
        items:
          $ref: '#/definitions/domain.InterfaceExecCondition'
        type: array
      preConditions:
        items:
          $ref: '#/definitions/domain.InterfaceExecCondition'
        type: array
      processorCategory:
        $ref: '#/definitions/consts.ProcessorCategory'
      processorContent:
        type: string
      processorId:
        description: for processor
        type: integer
      processorResult:
        type: string
      processorType:
        $ref: '#/definitions/consts.ProcessorType'
      progressStatus:
        $ref: '#/definitions/consts.ProgressStatus'
      reqContent:
        type: string
      respContent:
        type: string
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      round:
        type: string
      scenarioId:
        type: integer
      scenarioReportId:
        type: integer
      startTime:
        type: string
      stat:
        $ref: '#/definitions/agentDomain.InterfaceStat'
      summary:
        type: string
      useId:
        type: integer
    type: object
  agentExec.InterfaceExecObj:
    properties:
      debugData:
        $ref: '#/definitions/domain.DebugData'
      execScene:
        $ref: '#/definitions/domain.ExecScene'
      postConditions:
        items:
          $ref: '#/definitions/domain.InterfaceExecCondition'
        type: array
      preConditions:
        items:
          $ref: '#/definitions/domain.InterfaceExecCondition'
        type: array
    type: object
  agentExec.PlanExecObj:
    properties:
      name:
        type: string
      scenarios:
        items:
          $ref: '#/definitions/agentExec.ScenarioExecObj'
        type: array
      serverUrl:
        type: string
      token:
        type: string
    type: object
  agentExec.Processor:
    properties:
      children:
        items:
          $ref: '#/definitions/agentExec.Processor'
        type: array
      comments:
        type: string
      disable:
        type: boolean
      endpointInterfaceId:
        type: integer
      entity: {}
      entityCategory:
        $ref: '#/definitions/consts.ProcessorCategory'
      entityId:
        type: integer
      entityRaw:
        items:
          type: integer
        type: array
      entityType:
        $ref: '#/definitions/consts.ProcessorType'
      id:
        type: integer
      isDir:
        type: boolean
      method:
        $ref: '#/definitions/consts.HttpMethod'
      name:
        type: string
      ordr:
        type: integer
      parentId:
        type: integer
      processorInterfaceSrc:
        $ref: '#/definitions/consts.ProcessorInterfaceSrc'
      projectId:
        type: integer
      result:
        $ref: '#/definitions/agentDomain.ScenarioExecResult'
      round:
        type: string
      scenarioId:
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
      useId:
        type: integer
    type: object
  agentExec.ProcessorMsg:
    properties:
      children:
        items:
          $ref: '#/definitions/agentExec.Processor'
        type: array
      comments:
        type: string
      endpointInterfaceId:
        type: integer
      entityCategory:
        $ref: '#/definitions/consts.ProcessorCategory'
      entityId:
        type: integer
      entityRaw:
        items:
          type: integer
        type: array
      entityType:
        $ref: '#/definitions/consts.ProcessorType'
      id:
        type: integer
      isDir:
        type: boolean
      method:
        $ref: '#/definitions/consts.HttpMethod'
      name:
        type: string
      ordr:
        type: integer
      parentId:
        type: integer
      processorInterfaceSrc:
        $ref: '#/definitions/consts.ProcessorInterfaceSrc'
      projectId:
        type: integer
      result:
        $ref: '#/definitions/agentDomain.ScenarioExecResult'
      round:
        type: string
      scenarioId:
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
      useId:
        type: integer
    type: object
  agentExec.ScenarioExecObj:
    properties:
      baseUrl:
        type: string
      execScene:
        $ref: '#/definitions/domain.ExecScene'
      name:
        type: string
      rootProcessor:
        $ref: '#/definitions/agentExec.Processor'
      scenarioId:
        type: integer
      serverUrl:
        type: string
      token:
        type: string
    type: object
  agentExec.ScenarioExecObjMsg:
    properties:
      baseUrl:
        type: string
      execScene:
        $ref: '#/definitions/domain.ExecScene'
      name:
        type: string
      rootProcessor:
        $ref: '#/definitions/agentExec.ProcessorMsg'
      scenarioId:
        type: integer
      serverUrl:
        type: string
      token:
        type: string
    type: object
  consts.AuditStatus:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Init
    - Agreed
    - Refused
  consts.AuthorType:
    enum:
    - basicAuth
    - bearerToken
    - oAuth2
    - apiKey
    type: string
    x-enum-varnames:
    - BasicAuth
    - BearerToken
    - OAuth2
    - ApiKey
  consts.CheckpointType:
    enum:
    - responseStatus
    - responseHeader
    - responseBody
    - extractor
    - judgement
    type: string
    x-enum-varnames:
    - ResponseStatus
    - ResponseHeader
    - ResponseBody
    - Extractor
    - Judgement
  consts.ClientAuthenticationWay:
    enum:
    - sendAsBasicAuthHeader
    - sendClientCredentialsInBody
    type: string
    x-enum-varnames:
    - SendAsBasicAuthHeader
    - SendClientCredentialsInBody
  consts.ComparisonOperator:
    enum:
    - equal
    - notEqual
    - greaterThan
    - greaterThanOrEqual
    - lessThan
    - lessThanOrEqual
    - contain
    - notContain
    - regularMatch
    - exist
    - notExist
    type: string
    x-enum-varnames:
    - Equal
    - NotEqual
    - GreaterThan
    - GreaterThanOrEqual
    - LessThan
    - LessThanOrEqual
    - Contain
    - NotContain
    - RegularMatch
    - Exist
    - NotExist
  consts.ConditionType:
    enum:
    - extractor
    - checkpoint
    - script
    - responseDefine
    type: string
    x-enum-varnames:
    - ConditionTypeExtractor
    - ConditionTypeCheckpoint
    - ConditionTypeScript
    - ConditionTypeResponseDefine
  consts.DataItSrc:
    enum:
    - fileUpload
    - datapool
    type: string
    x-enum-varnames:
    - SrcFileUpload
    - SrcDatapool
  consts.DataItType:
    enum:
    - text
    - excel
    type: string
    x-enum-varnames:
    - Text
    - Excel
  consts.DataSyncType:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-comments:
      Add: 新增
      AutoAdd: 智能合并
      FullCover: 完全覆盖
    x-enum-varnames:
    - FullCover
    - AutoAdd
    - Add
  consts.DataType:
    enum:
    - int
    - float
    - string
    type: string
    x-enum-varnames:
    - Int
    - Float
    - String
  consts.ExpectRequestSelectType:
    enum:
    - keyValue
    - xPath
    - fullText
    type: string
    x-enum-varnames:
    - KeyValue
    - Xpath
    - FullText
  consts.ExtractorScope:
    enum:
    - private
    - public
    type: string
    x-enum-comments:
      Private: in current interface
      Public: shared by other interfaces in serve OR scenario
    x-enum-varnames:
    - Private
    - Public
  consts.ExtractorSrc:
    enum:
    - header
    - body
    - cookie
    type: string
    x-enum-varnames:
    - Header
    - Body
    - Cookie
  consts.ExtractorType:
    enum:
    - boundary
    - jsonquery
    - htmlquery
    - xmlquery
    - regx
    type: string
    x-enum-varnames:
    - Boundary
    - JsonQuery
    - HtmlQuery
    - XmlQuery
    - Regx
  consts.FormDataType:
    enum:
    - text
    - file
    type: string
    x-enum-varnames:
    - FormDataTypeText
    - FormDataTypeFile
  consts.GrantType:
    enum:
    - authorizationCode
    - authorizationCodeWithPKCE
    - implicit
    - passwordCredential
    - clientCredential
    type: string
    x-enum-varnames:
    - AuthorizationCode
    - AuthorizationCodeWithPKCE
    - Implicit
    - PasswordCredential
    - ClientCredential
  consts.HttpContentType:
    enum:
    - application/json
    - application/xml
    - text/html
    - text/text
    - multipart/form-data
    - application/x-www-form-urlencoded
    - httpd/unix-directory
    type: string
    x-enum-varnames:
    - ContentTypeJSON
    - ContentTypeXML
    - ContentTypeHTML
    - ContentTypeTEXT
    - ContentTypeFormData
    - ContentTypeFormUrlencoded
    - ContentTypeUnixDir
  consts.HttpMethod:
    enum:
    - GET
    - POST
    - PUT
    - DELETE
    - PATCH
    - HEAD
    - CONNECT
    - OPTIONS
    - TRACE
    type: string
    x-enum-varnames:
    - GET
    - POST
    - PUT
    - DELETE
    - PATCH
    - HEAD
    - CONNECT
    - OPTIONS
    - TRACE
  consts.HttpRespCharset:
    enum:
    - utf-8
    type: string
    x-enum-varnames:
    - UTF8
  consts.HttpRespCode:
    enum:
    - 100
    - 101
    - 200
    - 201
    - 202
    - 203
    - 204
    - 205
    - 206
    - 300
    - 301
    - 302
    - 303
    - 304
    - 305
    - 306
    - 307
    - 308
    - 400
    - 401
    - 402
    - 403
    - 404
    - 405
    - 406
    - 407
    - 408
    - 409
    - 410
    - 411
    - 412
    - 413
    - 414
    - 415
    - 416
    - 417
    - 500
    - 501
    - 502
    - 503
    - 504
    - 505
    type: integer
    x-enum-varnames:
    - Continue
    - SwitchingProtocol
    - OK
    - Created
    - Accepted
    - NonAuthoritativeInformation
    - NoContent
    - ResetContent
    - PartialContent
    - MultipleChoice
    - MovedPermanently
    - Found
    - SeeOther
    - NotModified
    - UseProxy
    - unused
    - TemporaryRedirect
    - PermanentRedirect
    - BadRequest
    - Unauthorized
    - PaymentRequired
    - Forbidden
    - NotFound
    - MethodNotAllowed
    - NotAcceptable
    - ProxyAuthenticationRequired
    - RequestTimeout
    - Conflict
    - Gone
    - LengthRequired
    - PreconditionFailed
    - RequestEntityTooLarge
    - RequestURITooLong
    - UnsupportedMediaType
    - RequestedRangeNotSatisfiable
    - ExpectationFailed
    - InternalServerError
    - Implemented
    - BadGateway
    - ServiceUnavailable
    - GatewayTimeout
    - HTTPVersionNotSupported
  consts.HttpRespLangType:
    enum:
    - json
    - xml
    - html
    - text
    type: string
    x-enum-varnames:
    - LangJSON
    - LangXML
    - LangHTML
    - LangTEXT
  consts.NodeType:
    enum:
    - elem
    - prop
    - content
    - text
    type: string
    x-enum-varnames:
    - NodeElem
    - NodeProp
    - NodeContent
    - NodeText
  consts.ParamIn:
    enum:
    - path
    - query
    - header
    - cookie
    - body
    type: string
    x-enum-varnames:
    - ParamInPath
    - ParamInQuery
    - ParamInHeader
    - ParamInCookie
    - ParamInBody
  consts.ParamType:
    enum:
    - string
    - number
    - integer
    type: string
    x-enum-varnames:
    - ParamTypeString
    - ParamTypeNumber
    - ParamTypeInteger
  consts.ProcessorCategory:
    enum:
    - processor_root
    - processor_interface
    - processor_group
    - processor_logic
    - processor_loop
    - processor_timer
    - processor_print
    - processor_variable
    - processor_assertion
    - processor_cookie
    - processor_data
    - processor_custom_code
    type: string
    x-enum-varnames:
    - ProcessorRoot
    - ProcessorInterface
    - ProcessorGroup
    - ProcessorLogic
    - ProcessorLoop
    - ProcessorTimer
    - ProcessorPrint
    - ProcessorVariable
    - ProcessorAssertion
    - ProcessorCookie
    - ProcessorData
    - ProcessorCustomCode
  consts.ProcessorInterfaceSrc:
    enum:
    - define
    - case
    - diagnose
    - curl
    - custom
    type: string
    x-enum-varnames:
    - InterfaceSrcDefine
    - InterfaceSrcCase
    - InterfaceSrcDiagnose
    - InterfaceSrcCurl
    - InterfaceSrcCustom
  consts.ProcessorType:
    enum:
    - processor_root_default
    - processor_interface_default
    - processor_group_default
    - processor_timer_default
    - processor_print_default
    - processor_logic_if
    - processor_logic_else
    - processor_loop_time
    - processor_loop_in
    - processor_loop_range
    - processor_loop_until
    - processor_variable_set
    - processor_variable_clear
    - processor_assertion_default
    - processor_extractor_boundary
    - processor_extractor_jsonquery
    - processor_extractor_htmlquery
    - processor_extractor_xmlquery
    - processor_cookie_set
    - processor_cookie_clear
    - processor_data_default
    - processor_custom_code_default
    type: string
    x-enum-varnames:
    - ProcessorRootDefault
    - ProcessorInterfaceDefault
    - ProcessorGroupDefault
    - ProcessorTimerDefault
    - ProcessorPrintDefault
    - ProcessorLogicIf
    - ProcessorLogicElse
    - ProcessorLoopTime
    - ProcessorLoopIn
    - ProcessorLoopRange
    - ProcessorLoopUntil
    - ProcessorVariableSet
    - ProcessorVariableClear
    - ProcessorAssertionDefault
    - ProcessorExtractorBoundary
    - ProcessorExtractorJsonQuery
    - ProcessorExtractorHtmlQuery
    - ProcessorExtractorXmlQuery
    - ProcessorCookieSet
    - ProcessorCookieClear
    - ProcessorDataDefault
    - ProcessorCustomCodeDefault
  consts.ProgressStatus:
    enum:
    - start
    - in_progress
    - end
    - cancel
    - error
    type: string
    x-enum-varnames:
    - Start
    - InProgress
    - End
    - Cancel
    - Error
  consts.ResultStatus:
    enum:
    - pass
    - fail
    - skip
    - block
    - unknown
    type: string
    x-enum-varnames:
    - Pass
    - Fail
    - Skip
    - Block
    - Unknown
  consts.RoleType:
    enum:
    - admin
    - user
    - tester
    - developer
    - product_manager
    type: string
    x-enum-varnames:
    - Admin
    - User
    - Tester
    - Developer
    - ProductManager
  consts.SourceType:
    enum:
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - SwaggerSync
    - SwaggerImport
  consts.SwitchStatus:
    enum:
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - SwitchON
    - SwitchOFF
  consts.TestStage:
    enum:
    - unit_test
    - integration_test
    - system_test
    - acceptance_test
    type: string
    x-enum-comments:
      AcceptanceTest: 验收测试
      IntegrationTest: 集成测试
      SystemTest: 系统测试
      UintTest: 单元测试
    x-enum-varnames:
    - UintTest
    - IntegrationTest
    - SystemTest
    - AcceptanceTest
  consts.TestStatus:
    enum:
    - draft
    - disabled
    - to_execute
    - executed
    type: string
    x-enum-comments:
      Disabled: 已禁用
      Draft: 草稿
      Executed: 已执行
      ToExecute: 待执行
    x-enum-varnames:
    - Draft
    - Disabled
    - ToExecute
    - Executed
  consts.TestType:
    enum:
    - api_test
    - performance_test
    - smoke_test
    type: string
    x-enum-comments:
      ApiTest: 接口测试
      PerformanceTest: 性能测试
      SmokeTest: 冒烟测试
    x-enum-varnames:
    - ApiTest
    - PerformanceTest
    - SmokeTest
  consts.UsedBy:
    enum:
    - interface_debug
    - case_debug
    - diagnose_debug
    - scenario_debug
    type: string
    x-enum-varnames:
    - InterfaceDebug
    - CaseDebug
    - DiagnoseDebug
    - ScenarioDebug
  convert.DriverType:
    enum:
    - postman
    - yapi
    - swagger
    - swagger2
    - swagger3
    type: string
    x-enum-varnames:
    - POSTMAN
    - YAPI
    - SWAGGER
    - SWAGGER2
    - SWAGGER3
  domain.ApiKey:
    properties:
      key:
        type: string
      transferMode:
        type: string
      value:
        type: string
    type: object
  domain.BasicAuth:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  domain.BearerToken:
    properties:
      token:
        type: string
    type: object
  domain.BodyFormDataItem:
    properties:
      desc:
        type: string
      interfaceId:
        type: integer
      name:
        type: string
      type:
        $ref: '#/definitions/consts.FormDataType'
      value:
        type: string
    type: object
  domain.BodyFormUrlEncodedItem:
    properties:
      desc:
        type: string
      interfaceId:
        type: integer
      name:
        type: string
      value:
        type: string
    type: object
  domain.Condition:
    properties:
      desc:
        type: string
      disabled:
        type: boolean
      entityData: {}
      entityId:
        type: integer
      entityType:
        type: string
      id:
        type: integer
      name:
        type: string
      ordr:
        type: integer
    type: object
  domain.Datapools:
    additionalProperties:
      items:
        $ref: '#/definitions/domain.VarKeyValuePair'
      type: array
    type: object
  domain.DebugData:
    properties:
      apiKey:
        $ref: '#/definitions/domain.ApiKey'
      authorizationType:
        $ref: '#/definitions/consts.AuthorType'
      baseUrl:
        type: string
      basicAuth:
        $ref: '#/definitions/domain.BasicAuth'
      bearerToken:
        $ref: '#/definitions/domain.BearerToken'
      body:
        type: string
      bodyFormData:
        items:
          $ref: '#/definitions/domain.BodyFormDataItem'
        type: array
      bodyFormUrlencoded:
        items:
          $ref: '#/definitions/domain.BodyFormUrlEncodedItem'
        type: array
      bodyLang:
        $ref: '#/definitions/consts.HttpRespLangType'
      bodyType:
        $ref: '#/definitions/consts.HttpContentType'
      caseInterfaceId:
        type: integer
      cookies:
        description: from cookie processor in scenario
        items:
          $ref: '#/definitions/domain.ExecCookie'
        type: array
      debugInterfaceId:
        type: integer
      diagnoseInterfaceId:
        type: integer
      endpointInterfaceId:
        type: integer
      envVars:
        items:
          $ref: '#/definitions/domain.GlobalVar'
        type: array
      fullUrlToDisplay:
        type: string
      globalParams:
        items:
          $ref: '#/definitions/domain.GlobalParam'
        type: array
      globalVars:
        items:
          $ref: '#/definitions/domain.GlobalVar'
        type: array
      headers:
        items:
          $ref: '#/definitions/domain.Header'
        type: array
      method:
        $ref: '#/definitions/consts.HttpMethod'
      name:
        type: string
      oauth20:
        $ref: '#/definitions/domain.OAuth20'
      pathParams:
        items:
          $ref: '#/definitions/domain.Param'
        type: array
      processorInterfaceSrc:
        $ref: '#/definitions/consts.ProcessorInterfaceSrc'
      projectId:
        type: integer
      queryParams:
        items:
          $ref: '#/definitions/domain.Param'
        type: array
      responseDefine:
        $ref: '#/definitions/domain.Condition'
      scenarioProcessorId:
        type: integer
      serveId:
        type: integer
      serverId:
        type: integer
      shareVars:
        description: used for selection and show in right environment tab
        items:
          $ref: '#/definitions/domain.GlobalVar'
        type: array
      url:
        type: string
      usedBy:
        $ref: '#/definitions/consts.UsedBy'
    type: object
  domain.DebugInfo:
    properties:
      caseInterfaceId:
        description: load by endpoint case
        type: integer
      debugInterfaceId:
        type: integer
      diagnoseInterfaceId:
        description: load by interface diagnose
        type: integer
      endpointInterfaceId:
        description: EndpointInterface without DebugInterface init
        type: integer
      scenarioProcessorId:
        description: used to load vars by scenario processor
        type: integer
      usedBy:
        $ref: '#/definitions/consts.UsedBy'
      userId:
        type: integer
    type: object
  domain.DebugResponse:
    properties:
      content:
        type: string
      contentCharset:
        $ref: '#/definitions/consts.HttpRespCharset'
      contentLang:
        $ref: '#/definitions/consts.HttpRespLangType'
      contentLength:
        type: integer
      contentType:
        $ref: '#/definitions/consts.HttpContentType'
      cookies:
        items:
          $ref: '#/definitions/domain.ExecCookie'
        type: array
      data:
        description: Content obj in goja
      headers:
        items:
          $ref: '#/definitions/domain.Header'
        type: array
      id:
        type: integer
      invokeId:
        type: integer
      statusCode:
        $ref: '#/definitions/consts.HttpRespCode'
      statusContent:
        type: string
      time:
        type: integer
    type: object
  domain.EnvToVariables:
    additionalProperties:
      items:
        $ref: '#/definitions/domain.GlobalVar'
      type: array
    type: object
  domain.ExecCookie:
    properties:
      domain:
        type: string
      expireTime:
        type: string
      id:
        type: integer
      name:
        type: string
      path:
        type: string
      value: {}
    type: object
  domain.ExecInterfaceCheckpoint:
    properties:
      expression:
        type: string
      extractorVariable:
        type: string
      interfaceId:
        type: integer
      operator:
        $ref: '#/definitions/consts.ComparisonOperator'
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      type:
        $ref: '#/definitions/consts.CheckpointType'
      value:
        type: string
    type: object
  domain.ExecInterfaceExtractor:
    properties:
      boundaryEnd:
        type: string
      boundaryIncluded:
        type: boolean
      boundaryIndex:
        type: integer
      boundaryStart:
        type: string
      expression:
        type: string
      interfaceId:
        type: integer
      key:
        type: string
      prop:
        type: string
      result:
        type: string
      src:
        $ref: '#/definitions/consts.ExtractorSrc'
      type:
        $ref: '#/definitions/consts.ExtractorType'
      variable:
        type: string
    type: object
  domain.ExecLog:
    properties:
      desc:
        type: string
      endTime:
        type: string
      id:
        type: integer
      interfaceCheckpointsResult:
        items:
          $ref: '#/definitions/domain.ExecInterfaceCheckpoint'
        type: array
      interfaceExtractorsResult:
        items:
          $ref: '#/definitions/domain.ExecInterfaceExtractor'
        type: array
      interfaceId:
        description: for interface
        type: integer
      logs:
        items:
          $ref: '#/definitions/domain.ExecLog'
        type: array
      name:
        type: string
      output:
        $ref: '#/definitions/domain.ExecOutput'
      parentId:
        type: integer
      persistentId:
        type: integer
      processContent:
        type: string
      processId:
        type: integer
      processResult:
        type: string
      processorCategory:
        allOf:
        - $ref: '#/definitions/consts.ProcessorCategory'
        description: type
      processorType:
        allOf:
        - $ref: '#/definitions/consts.ProcessorType'
        description: for processor
      progressStatus:
        $ref: '#/definitions/consts.ProgressStatus'
      reportId:
        type: integer
      reqContent:
        type: string
      respContent:
        type: string
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      startTime:
        type: string
      summary:
        items:
          type: string
        type: array
    type: object
  domain.ExecOutput:
    properties:
      boundaryEnd:
        type: string
      boundaryIncluded:
        type: boolean
      boundaryIndex:
        type: integer
      boundaryStart:
        description: Expression string `json:"expression"`
        type: string
      breakFrom:
        description: loop break
        type: integer
      isLoop:
        type: integer
      isOnce:
        type: boolean
      isRand:
        type: boolean
      list:
        description: loop in
        type: string
      msg:
        description: common
        type: string
      pass:
        description: logic if, else
        type: boolean
      range:
        description: loop - range
        type: string
      rangeEnd: {}
      rangeStart: {}
      rangeType:
        $ref: '#/definitions/consts.DataType'
      repeatTimes:
        type: integer
      sleepTime:
        description: timer
        type: integer
      src:
        allOf:
        - $ref: '#/definitions/consts.ExtractorSrc'
        description: extractor
      times:
        description: loop util
        type: string
      type:
        $ref: '#/definitions/consts.ExtractorType'
      url:
        description: data
        type: string
      variable:
        type: string
      variableName:
        type: string
      variableValue:
        description: variable
    type: object
  domain.ExecScene:
    properties:
      datapool:
        $ref: '#/definitions/domain.Datapools'
      debugInterfaceToEnvMap:
        $ref: '#/definitions/domain.InterfaceToEnvMap'
      envToVariables:
        $ref: '#/definitions/domain.EnvToVariables'
      globalParam:
        items:
          $ref: '#/definitions/domain.GlobalParam'
        type: array
      globalVar:
        items:
          $ref: '#/definitions/domain.GlobalVar'
        type: array
      shareVars:
        items:
          $ref: '#/definitions/domain.GlobalVar'
        type: array
    type: object
  domain.ExtractorBase:
    properties:
      boundaryEnd:
        type: string
      boundaryIncluded:
        type: boolean
      boundaryIndex:
        type: integer
      boundaryStart:
        type: string
      conditionEntityId:
        description: refer to po id in domain object
        type: integer
      conditionEntityType:
        allOf:
        - $ref: '#/definitions/consts.ConditionType'
        description: for log only
      conditionId:
        type: integer
      default:
        description: for cookie
        type: string
      disabled:
        type: boolean
      expression:
        type: string
      invokeId:
        description: for log only
        type: integer
      key:
        type: string
      prop:
        type: string
      result:
        type: string
      resultMsg:
        type: string
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      scope:
        $ref: '#/definitions/consts.ExtractorScope'
      src:
        $ref: '#/definitions/consts.ExtractorSrc'
      type:
        $ref: '#/definitions/consts.ExtractorType'
      variable:
        type: string
    type: object
  domain.GlobalParam:
    properties:
      Required:
        type: boolean
      defaultValue:
        type: string
      in:
        $ref: '#/definitions/consts.ParamIn'
      name:
        type: string
      type:
        $ref: '#/definitions/consts.ParamType'
    type: object
  domain.GlobalVar:
    properties:
      localValue:
        type: string
      name:
        type: string
      remoteValue:
        type: string
      rightValue:
        type: string
      varId:
        type: integer
    type: object
  domain.Header:
    properties:
      default:
        type: string
      disabled:
        type: boolean
      example:
        type: string
      format:
        type: string
      maxItems:
        type: integer
      maxLength:
        type: integer
      minItems:
        type: integer
      minLength:
        type: integer
      multipleOf:
        type: integer
      name:
        type: string
      pattern:
        type: string
      ref:
        type: string
      required:
        type: boolean
      type:
        type: string
      uniqueItems:
        type: boolean
      value:
        type: string
    type: object
  domain.InterfaceExecCondition:
    properties:
      desc:
        type: string
      raw:
        items:
          type: integer
        type: array
      type:
        $ref: '#/definitions/consts.ConditionType'
    type: object
  domain.InterfaceToEnvMap:
    additionalProperties:
      type: integer
    type: object
  domain.OAuth20:
    properties:
      accessToken:
        type: string
      accessTokenURL:
        type: string
      authURL:
        type: string
      callbackUrl:
        type: string
      clientAuthentication:
        $ref: '#/definitions/consts.ClientAuthenticationWay'
      clientID:
        type: string
      clientSecret:
        type: string
      grantType:
        $ref: '#/definitions/consts.GrantType'
      headerPrefix:
        type: string
      name:
        type: string
      scope:
        type: string
      state:
        type: string
    type: object
  domain.Param:
    properties:
      Description:
        type: string
      disabled:
        type: boolean
      name:
        type: string
      paramIn:
        $ref: '#/definitions/consts.ParamIn'
      type:
        type: string
      value:
        type: string
    type: object
  domain.Report:
    properties:
      desc:
        type: string
      duration:
        description: sec
        type: integer
      endTime:
        type: string
      failAssertionNum:
        type: integer
      failInterfaceNum:
        type: integer
      failRequestNum:
        type: integer
      id:
        type: integer
      interfaceStatusMap:
        additionalProperties:
          additionalProperties:
            type: integer
          type: object
        type: object
      logs:
        items:
          $ref: '#/definitions/domain.ExecLog'
        type: array
      name:
        type: string
      passAssertionNum:
        type: integer
      passInterfaceNum:
        type: integer
      passRequestNum:
        type: integer
      payload: {}
      progressStatus:
        $ref: '#/definitions/consts.ProgressStatus'
      projectId:
        type: integer
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      scenarioId:
        type: integer
      startTime:
        type: string
      totalAssertionNum:
        type: integer
      totalInterfaceNum:
        type: integer
      totalRequestNum:
        type: integer
    type: object
  domain.RequestBody:
    properties:
      description:
        type: string
      examples:
        type: string
      id:
        type: integer
      mediaType:
        type: string
      schemaItem:
        $ref: '#/definitions/domain.SchemaItem'
      schemaRefId:
        type: integer
    type: object
  domain.ResponseBody:
    properties:
      code:
        type: string
      description:
        type: string
      examples:
        type: string
      headers:
        items:
          $ref: '#/definitions/domain.Header'
        type: array
      id:
        type: integer
      mediaType:
        type: string
      schemaItem:
        $ref: '#/definitions/domain.SchemaItem'
      schemaRefId:
        type: integer
    type: object
  domain.SchemaItem:
    properties:
      content:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  domain.SubmitDebugResultRequest:
    properties:
      postConditions:
        items:
          $ref: '#/definitions/domain.InterfaceExecCondition'
        type: array
      preConditions:
        items:
          $ref: '#/definitions/domain.InterfaceExecCondition'
        type: array
      request:
        $ref: '#/definitions/domain.DebugData'
      response:
        $ref: '#/definitions/domain.DebugResponse'
    type: object
  domain.VarKeyValuePair:
    additionalProperties: true
    type: object
  domain.Variable:
    properties:
      availableForCurrScope:
        type: boolean
      id:
        type: integer
      name:
        type: string
      value:
        type: string
    type: object
  iris.Map:
    additionalProperties: true
    type: object
  model.Auth2Token:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      projectId:
        type: integer
      token:
        type: string
      tokenType:
        type: string
      updatedAt:
        type: string
    type: object
  model.Avatar:
    properties:
      avatar:
        type: string
    type: object
  model.Category:
    properties:
      children:
        items:
          $ref: '#/definitions/model.Processor'
        type: array
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      isDir:
        type: boolean
      name:
        type: string
      ordr:
        type: integer
      parentId:
        type: integer
      projectId:
        type: integer
      serveId:
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
      sourceType:
        $ref: '#/definitions/consts.SourceType'
      type:
        $ref: '#/definitions/serverConsts.CategoryDiscriminator'
      updatedAt:
        type: string
      useId:
        type: integer
    type: object
  model.ComponentSchema:
    properties:
      content:
        type: string
      createdAt:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      examples:
        type: string
      id:
        type: integer
      name:
        type: string
      ref:
        type: string
      serveId:
        type: integer
      sourceType:
        $ref: '#/definitions/consts.SourceType'
      tags:
        type: string
      type:
        type: string
      updatedAt:
        type: string
    type: object
  model.ComponentSchemaSecurity:
    properties:
      bearerFormat:
        type: string
      createdAt:
        type: string
      default:
        type: boolean
      description:
        type: string
      disabled:
        type: boolean
      flows:
        type: string
      id:
        type: integer
      in:
        type: string
      key:
        type: string
      name:
        type: string
      openIdConnectUrl:
        type: string
      password:
        type: string
      project_id:
        type: integer
      scheme:
        type: string
      serve_id:
        type: integer
      token:
        type: string
      type:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      value:
        type: string
    type: object
  model.Datapool:
    properties:
      createUser:
        type: string
      createdAt:
        type: string
      data:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      path:
        type: string
      projectId:
        type: integer
      updatedAt:
        type: string
    type: object
  model.DebugConditionCheckpoint:
    properties:
      actualResult:
        type: string
      conditionEntityId:
        description: refer to entity po id in domain object
        type: integer
      conditionEntityType:
        allOf:
        - $ref: '#/definitions/consts.ConditionType'
        description: for log only
      conditionId:
        type: integer
      createdAt:
        type: string
      disabled:
        type: boolean
      expression:
        type: string
      extractorVariable:
        type: string
      id:
        type: integer
      invokeId:
        description: for log only
        type: integer
      operator:
        $ref: '#/definitions/consts.ComparisonOperator'
      resultMsg:
        type: string
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      type:
        $ref: '#/definitions/consts.CheckpointType'
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.DebugConditionExtractor:
    properties:
      boundaryEnd:
        type: string
      boundaryIncluded:
        type: boolean
      boundaryIndex:
        type: integer
      boundaryStart:
        type: string
      conditionEntityId:
        description: refer to po id in domain object
        type: integer
      conditionEntityType:
        allOf:
        - $ref: '#/definitions/consts.ConditionType'
        description: for log only
      conditionId:
        type: integer
      createdAt:
        type: string
      default:
        description: for cookie
        type: string
      disabled:
        type: boolean
      expression:
        type: string
      id:
        type: integer
      invokeId:
        description: for log only
        type: integer
      key:
        type: string
      prop:
        type: string
      result:
        type: string
      resultMsg:
        type: string
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      scope:
        $ref: '#/definitions/consts.ExtractorScope'
      src:
        $ref: '#/definitions/consts.ExtractorSrc'
      type:
        $ref: '#/definitions/consts.ExtractorType'
      updatedAt:
        type: string
      variable:
        type: string
    type: object
  model.DebugInterface:
    properties:
      Version:
        type: string
      apiKey:
        $ref: '#/definitions/model.DebugInterfaceApiKey'
      authorizationType:
        type: string
      baseUrl:
        type: string
      basicAuth:
        $ref: '#/definitions/model.DebugInterfaceBasicAuth'
      bearerToken:
        $ref: '#/definitions/model.DebugInterfaceBearerToken'
      body:
        type: string
      bodyFormData:
        items:
          $ref: '#/definitions/model.DebugInterfaceBodyFormDataItem'
        type: array
      bodyFormUrlencoded:
        items:
          $ref: '#/definitions/model.DebugInterfaceBodyFormUrlEncodedItem'
        type: array
      bodyType:
        $ref: '#/definitions/consts.HttpContentType'
      caseInterfaceId:
        type: integer
      cookies:
        items:
          $ref: '#/definitions/model.DebugInterfaceCookie'
        type: array
      createdAt:
        type: string
      desc:
        type: string
      description:
        type: string
      diagnoseInterfaceId:
        type: integer
      disabled:
        type: boolean
      endpointInterfaceId:
        type: integer
      headers:
        items:
          $ref: '#/definitions/model.DebugInterfaceHeader'
        type: array
      id:
        type: integer
      interfaceCheckpoints:
        items:
          $ref: '#/definitions/model.DebugConditionCheckpoint'
        type: array
      interfaceExtractors:
        items:
          $ref: '#/definitions/model.DebugConditionExtractor'
        type: array
      method:
        $ref: '#/definitions/consts.HttpMethod'
      name:
        type: string
      oauth20:
        $ref: '#/definitions/model.DebugInterfaceOAuth20'
      operationId:
        type: string
      ordr:
        type: integer
      parentId:
        description: IsDir       bool   `json:"isDir"`
        type: integer
      pathParams:
        items:
          $ref: '#/definitions/model.DebugInterfaceParam'
        type: array
      preRequestScript:
        type: string
      processorInterfaceSrc:
        $ref: '#/definitions/consts.ProcessorInterfaceSrc'
      projectId:
        type: integer
      queryParams:
        description: debug data
        items:
          $ref: '#/definitions/model.DebugInterfaceParam'
        type: array
      scenarioProcessorId:
        type: integer
      security:
        type: string
      serveId:
        type: integer
      serverId:
        description: used by DiagnoseInterface
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
      updatedAt:
        type: string
      url:
        type: string
      useId:
        type: integer
      validationScript:
        type: string
    type: object
  model.DebugInterfaceApiKey:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      interfaceId:
        type: integer
      key:
        type: string
      transferMode:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.DebugInterfaceBasicAuth:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      interfaceId:
        type: integer
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  model.DebugInterfaceBearerToken:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      interfaceId:
        type: integer
      token:
        type: string
      updatedAt:
        type: string
    type: object
  model.DebugInterfaceBodyFormDataItem:
    properties:
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      interfaceId:
        type: integer
      name:
        type: string
      type:
        $ref: '#/definitions/consts.FormDataType'
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.DebugInterfaceBodyFormUrlEncodedItem:
    properties:
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      interfaceId:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.DebugInterfaceCookie:
    properties:
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      interfaceId:
        type: integer
      name:
        type: string
      type:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.DebugInterfaceHeader:
    properties:
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      interfaceId:
        type: integer
      name:
        type: string
      type:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.DebugInterfaceOAuth20:
    properties:
      accessToken:
        type: string
      accessTokenURL:
        type: string
      authURL:
        type: string
      callbackUrl:
        type: string
      clientAuthentication:
        $ref: '#/definitions/consts.ClientAuthenticationWay'
      clientID:
        type: string
      clientSecret:
        type: string
      createdAt:
        type: string
      disabled:
        type: boolean
      grantType:
        $ref: '#/definitions/consts.GrantType'
      headerPrefix:
        type: string
      id:
        type: integer
      interfaceId:
        type: integer
      name:
        type: string
      scope:
        type: string
      state:
        type: string
      updatedAt:
        type: string
    type: object
  model.DebugInterfaceParam:
    properties:
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      interfaceId:
        type: integer
      name:
        type: string
      paramIn:
        $ref: '#/definitions/consts.ParamIn'
      type:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.DebugInvoke:
    properties:
      checkpointStatus:
        $ref: '#/definitions/consts.ResultStatus'
      createdAt:
        type: string
      debugInterfaceId:
        type: integer
      desc:
        type: string
      disabled:
        type: boolean
      endpointInterfaceId:
        type: integer
      httpStatusCode:
        $ref: '#/definitions/consts.HttpRespCode'
      httpStatusContent:
        type: string
      id:
        type: integer
      name:
        type: string
      postConditionsContent:
        type: string
      preConditionsContent:
        type: string
      projectId:
        type: integer
      reqContent:
        type: string
      respContent:
        type: string
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      scenarioId:
        type: integer
      scenarioProcessorId:
        type: integer
      serveId:
        type: integer
      updatedAt:
        type: string
    type: object
  model.DiagnoseInterface:
    properties:
      IsDir:
        type: boolean
      children:
        items:
          $ref: '#/definitions/model.DiagnoseInterface'
        type: array
      createdAt:
        type: string
      createdBy:
        type: integer
      debugData:
        $ref: '#/definitions/model.DebugInterface'
      debugInterfaceId:
        type: integer
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      isLeaf:
        type: boolean
      method:
        $ref: '#/definitions/consts.HttpMethod'
      name:
        type: string
      ordr:
        type: integer
      parentId:
        type: integer
      projectId:
        type: integer
      serveId:
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
      title:
        type: string
      type:
        $ref: '#/definitions/serverConsts.DiagnoseInterfaceType'
      updatedAt:
        type: string
      updatedBy:
        type: integer
      useId:
        type: integer
    type: object
  model.Endpoint:
    properties:
      advancedMockDisabled:
        type: boolean
      categoryId:
        type: integer
      createUser:
        type: string
      createdAt:
        type: string
      curl:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      interfaces:
        items:
          $ref: '#/definitions/model.EndpointInterface'
        type: array
      maintainer:
        type: string
      methods:
        items:
          $ref: '#/definitions/consts.HttpMethod'
        type: array
      path:
        type: string
      pathParams:
        items:
          $ref: '#/definitions/model.EndpointPathParam'
        type: array
      projectId:
        type: integer
      scriptMockDisabled:
        type: boolean
      serialNumber:
        type: string
      serveId:
        type: integer
      serveName:
        type: string
      serverId:
        type: integer
      sourceType:
        $ref: '#/definitions/consts.SourceType'
      status:
        type: integer
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updateUser:
        type: string
      updatedAt:
        type: string
      version:
        type: string
      versions:
        items:
          $ref: '#/definitions/model.EndpointVersion'
        type: array
    type: object
  model.EndpointCase:
    properties:
      createUserId:
        type: integer
      createUserName:
        type: string
      createdAt:
        type: string
      debugData:
        $ref: '#/definitions/model.DebugInterface'
      debugInterfaceId:
        type: integer
      desc:
        type: string
      disabled:
        type: boolean
      endpointId:
        type: integer
      id:
        type: integer
      name:
        type: string
      projectId:
        type: integer
      serialNumber:
        type: string
      serveId:
        type: integer
      updatedAt:
        type: string
    type: object
  model.EndpointDocument:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      projectId:
        type: integer
      updatedAt:
        type: string
      version:
        type: string
    type: object
  model.EndpointInterface:
    properties:
      Version:
        type: string
      authorizationType:
        type: string
      body:
        type: string
      bodyType:
        $ref: '#/definitions/consts.HttpContentType'
      cookies:
        items:
          $ref: '#/definitions/model.EndpointInterfaceCookie'
        type: array
      createdAt:
        type: string
      creator:
        type: string
      debugInterfaceId:
        type: integer
      desc:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      endpointId:
        type: integer
      headers:
        items:
          $ref: '#/definitions/model.EndpointInterfaceHeader'
        type: array
      id:
        type: integer
      method:
        $ref: '#/definitions/consts.HttpMethod'
      name:
        type: string
      operationId:
        type: string
      ordr:
        type: integer
      params:
        items:
          $ref: '#/definitions/model.EndpointInterfaceParam'
        type: array
      parentId:
        description: IsDir       bool   `json:"isDir"`
        type: integer
      pathParams:
        items:
          $ref: '#/definitions/model.EndpointPathParam'
        type: array
      preRequestScript:
        type: string
      projectId:
        type: integer
      requestBody:
        $ref: '#/definitions/model.EndpointInterfaceRequestBody'
      responseBodies:
        items:
          $ref: '#/definitions/model.EndpointInterfaceResponseBody'
        type: array
      responseCodes:
        type: string
      security:
        type: string
      slots:
        $ref: '#/definitions/iris.Map'
      sourceType:
        $ref: '#/definitions/consts.SourceType'
      tags:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      url:
        type: string
      useId:
        type: integer
      validationScript:
        type: string
    type: object
  model.EndpointInterfaceCookie:
    properties:
      createdAt:
        type: string
      default:
        type: string
      desc:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      example:
        type: string
      format:
        type: string
      id:
        type: integer
      interfaceId:
        type: integer
      maxItems:
        type: integer
      maxLength:
        type: integer
      minItems:
        type: integer
      minLength:
        type: integer
      multipleOf:
        type: number
      name:
        type: string
      pattern:
        type: string
      ref:
        type: string
      required:
        type: boolean
      type:
        type: string
      uniqueItems:
        type: boolean
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.EndpointInterfaceHeader:
    properties:
      createdAt:
        type: string
      default:
        type: string
      desc:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      example:
        type: string
      format:
        type: string
      id:
        type: integer
      interfaceId:
        type: integer
      maxItems:
        type: integer
      maxLength:
        type: integer
      minItems:
        type: integer
      minLength:
        type: integer
      multipleOf:
        type: number
      name:
        type: string
      pattern:
        type: string
      ref:
        type: string
      required:
        type: boolean
      type:
        type: string
      uniqueItems:
        type: boolean
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.EndpointInterfaceParam:
    properties:
      createdAt:
        type: string
      default:
        type: string
      desc:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      example:
        type: string
      format:
        type: string
      id:
        type: integer
      interfaceId:
        type: integer
      maxItems:
        type: integer
      maxLength:
        type: integer
      minItems:
        type: integer
      minLength:
        type: integer
      multipleOf:
        type: number
      name:
        type: string
      pattern:
        type: string
      ref:
        type: string
      required:
        type: boolean
      type:
        type: string
      uniqueItems:
        type: boolean
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.EndpointInterfaceRequestBody:
    properties:
      createdAt:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      examples:
        type: string
      id:
        type: integer
      interfaceId:
        type: integer
      mediaType:
        type: string
      schemaItem:
        $ref: '#/definitions/model.EndpointInterfaceRequestBodyItem'
      schemaRefId:
        type: integer
      updatedAt:
        type: string
    type: object
  model.EndpointInterfaceRequestBodyItem:
    properties:
      content:
        type: string
      createdAt:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      requestBodyId:
        type: integer
      type:
        type: string
      updatedAt:
        type: string
    type: object
  model.EndpointInterfaceResponseBody:
    properties:
      code:
        type: string
      createdAt:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      examples:
        type: string
      headers:
        items:
          $ref: '#/definitions/model.EndpointInterfaceResponseBodyHeader'
        type: array
      id:
        type: integer
      interfaceId:
        type: integer
      mediaType:
        type: string
      schemaItem:
        $ref: '#/definitions/model.EndpointInterfaceResponseBodyItem'
      schemaRefId:
        type: integer
      updatedAt:
        type: string
    type: object
  model.EndpointInterfaceResponseBodyHeader:
    properties:
      createdAt:
        type: string
      default:
        type: string
      desc:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      example:
        type: string
      format:
        type: string
      id:
        type: integer
      interfaceId:
        type: integer
      maxItems:
        type: integer
      maxLength:
        type: integer
      minItems:
        type: integer
      minLength:
        type: integer
      multipleOf:
        type: number
      name:
        type: string
      pattern:
        type: string
      ref:
        type: string
      required:
        type: boolean
      responseBodyId:
        type: integer
      type:
        type: string
      uniqueItems:
        type: boolean
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.EndpointInterfaceResponseBodyItem:
    properties:
      ResponseBodyId:
        type: integer
      content:
        type: string
      createdAt:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      type:
        type: string
      updatedAt:
        type: string
    type: object
  model.EndpointMockExpect:
    properties:
      createUser:
        type: string
      createdAt:
        type: string
      disabled:
        type: boolean
      endpointId:
        type: integer
      endpointInterfaceId:
        type: integer
      id:
        type: integer
      method:
        $ref: '#/definitions/consts.HttpMethod'
      name:
        type: string
      ordr:
        type: integer
      requestBodies:
        items:
          $ref: '#/definitions/model.EndpointMockExpectRequest'
        type: array
      requestHeaders:
        items:
          $ref: '#/definitions/model.EndpointMockExpectRequest'
        type: array
      requestPathParams:
        items:
          $ref: '#/definitions/model.EndpointMockExpectRequest'
        type: array
      requestQueryParams:
        items:
          $ref: '#/definitions/model.EndpointMockExpectRequest'
        type: array
      responseBody:
        $ref: '#/definitions/model.EndpointMockExpectResponse'
      responseHeaders:
        items:
          $ref: '#/definitions/model.EndpointMockExpectResponseHeader'
        type: array
      updateUser:
        type: string
      updatedAt:
        type: string
    type: object
  model.EndpointMockExpectRequest:
    properties:
      compareWay:
        $ref: '#/definitions/consts.ComparisonOperator'
      createdAt:
        type: string
      disabled:
        type: boolean
      endpointMockExpectId:
        type: integer
      id:
        type: integer
      name:
        type: string
      selectType:
        $ref: '#/definitions/consts.ExpectRequestSelectType'
      source:
        $ref: '#/definitions/consts.ParamIn'
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.EndpointMockExpectResponse:
    properties:
      code:
        type: string
      createdAt:
        type: string
      delayTime:
        type: integer
      disabled:
        type: boolean
      endpointMockExpectId:
        type: integer
      id:
        type: integer
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.EndpointMockExpectResponseHeader:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      endpointMockExpectId:
        type: integer
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.EndpointMockScript:
    properties:
      content:
        type: string
      createUser:
        type: string
      createdAt:
        type: string
      disabled:
        type: boolean
      endpointId:
        type: integer
      id:
        type: integer
      method:
        allOf:
        - $ref: '#/definitions/consts.HttpMethod'
        description: EndpointInterfaceId uint              `json:"endpointInterfaceId"`
      updateUser:
        type: string
      updatedAt:
        type: string
    type: object
  model.EndpointPathParam:
    properties:
      createdAt:
        type: string
      default:
        type: string
      desc:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      endpointId:
        type: integer
      example:
        type: string
      format:
        type: string
      id:
        type: integer
      interfaceId:
        type: integer
      maxItems:
        type: integer
      maxLength:
        type: integer
      minItems:
        type: integer
      minLength:
        type: integer
      multipleOf:
        type: number
      name:
        type: string
      pattern:
        type: string
      ref:
        type: string
      required:
        type: boolean
      type:
        type: string
      uniqueItems:
        type: boolean
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.EndpointTagRel:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      endpointId:
        type: integer
      id:
        type: integer
      projectId:
        type: integer
      tagId:
        type: integer
      tagName:
        type: string
      updatedAt:
        type: string
    type: object
  model.EndpointVersion:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      endpointId:
        type: integer
      id:
        type: integer
      updatedAt:
        type: string
      version:
        type: string
    type: object
  model.Environment:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      projectId:
        type: integer
      serveServers:
        items:
          $ref: '#/definitions/model.ServeServer'
        type: array
      sort:
        type: integer
      updatedAt:
        type: string
      vars:
        items:
          $ref: '#/definitions/model.EnvironmentVar'
        type: array
    type: object
  model.EnvironmentVar:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      environmentId:
        type: integer
      id:
        type: integer
      localValue:
        type: string
      name:
        type: string
      projectId:
        type: integer
      remoteValue:
        type: string
      rightValue:
        type: string
      updatedAt:
        type: string
      varId:
        type: integer
    type: object
  model.ExecLogCheckpoint:
    properties:
      actualResult:
        type: string
      conditionEntityId:
        description: refer to entity po id in domain object
        type: integer
      conditionEntityType:
        allOf:
        - $ref: '#/definitions/consts.ConditionType'
        description: for log only
      conditionId:
        type: integer
      createdAt:
        type: string
      disabled:
        type: boolean
      expression:
        type: string
      extractorVariable:
        type: string
      id:
        type: integer
      invokeId:
        type: integer
      operator:
        $ref: '#/definitions/consts.ComparisonOperator'
      resultMsg:
        type: string
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      type:
        $ref: '#/definitions/consts.CheckpointType'
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.ExecLogExtractor:
    properties:
      boundaryEnd:
        type: string
      boundaryIncluded:
        type: boolean
      boundaryIndex:
        type: integer
      boundaryStart:
        type: string
      conditionEntityId:
        description: refer to po id in domain object
        type: integer
      conditionEntityType:
        allOf:
        - $ref: '#/definitions/consts.ConditionType'
        description: for log only
      conditionId:
        type: integer
      createdAt:
        type: string
      default:
        description: for cookie
        type: string
      disabled:
        type: boolean
      expression:
        type: string
      id:
        type: integer
      invokeId:
        type: integer
      key:
        type: string
      prop:
        type: string
      result:
        type: string
      resultMsg:
        type: string
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      scope:
        $ref: '#/definitions/consts.ExtractorScope'
      src:
        $ref: '#/definitions/consts.ExtractorSrc'
      type:
        $ref: '#/definitions/consts.ExtractorType'
      updatedAt:
        type: string
      variable:
        type: string
    type: object
  model.ExecLogProcessor:
    properties:
      createdAt:
        type: string
      debugInterfaceId:
        type: integer
      desc:
        type: string
      detail:
        type: string
      disabled:
        type: boolean
      endTime:
        type: string
      endpointInterfaceId:
        description: for interface
        type: integer
      httpStatusCode:
        $ref: '#/definitions/consts.HttpRespCode'
      httpStatusContent:
        type: string
      id:
        type: integer
      interfaceCheckpointsResult:
        items:
          $ref: '#/definitions/model.ExecLogCheckpoint'
        type: array
      interfaceExtractorsResult:
        items:
          $ref: '#/definitions/model.ExecLogExtractor'
        type: array
      invokeId:
        type: integer
      logs:
        items:
          $ref: '#/definitions/model.ExecLogProcessor'
        type: array
      name:
        type: string
      output:
        type: string
      parentId:
        type: integer
      processorCategory:
        allOf:
        - $ref: '#/definitions/consts.ProcessorCategory'
        description: type
      processorType:
        allOf:
        - $ref: '#/definitions/consts.ProcessorType'
        description: for processor
      progressStatus:
        $ref: '#/definitions/consts.ProgressStatus'
      reportId:
        type: integer
      reqContent:
        type: string
      respContent:
        type: string
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      round:
        type: string
      scenarioId:
        type: integer
      scenarioProcessorId:
        type: integer
      startTime:
        type: string
      summary:
        type: string
      updatedAt:
        type: string
      useId:
        type: integer
    type: object
  model.Message:
    properties:
      content:
        type: string
      createdAt:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      message_source:
        type: string
      read_status:
        description: 已读状态 1:未读 2:已读
        type: integer
      receiver_id:
        type: integer
      receiver_range:
        description: 接收者范围 1:全部 2:个人 3：某角色 4:某项目
        type: integer
      updatedAt:
        type: string
    type: object
  model.Plan:
    properties:
      adminId:
        description: 负责人ID
        type: integer
      adminName:
        description: 负责人姓名
        type: string
      categoryId:
        type: integer
      createUserId:
        type: integer
      createUserName:
        description: 创建人姓名
        type: string
      createdAt:
        type: string
      currEnvId:
        type: integer
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      projectId:
        type: integer
      reports:
        items:
          $ref: '#/definitions/model.PlanReport'
        type: array
      scenarios:
        items:
          $ref: '#/definitions/model.Scenario'
        type: array
      serialNumber:
        type: string
      status:
        $ref: '#/definitions/consts.TestStatus'
      testPassRate:
        type: string
      testStage:
        $ref: '#/definitions/consts.TestStage'
      updateUserId:
        type: integer
      updateUserName:
        description: 最近更新人姓名
        type: string
      updatedAt:
        type: string
      version:
        type: number
    type: object
  model.PlanReport:
    properties:
      createUserId:
        type: integer
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      duration:
        description: sec
        type: integer
      endTime:
        type: string
      execEnvId:
        description: 执行环境Id
        type: integer
      failAssertionNum:
        type: integer
      failInterfaceNum:
        type: integer
      failRequestNum:
        type: integer
      failScenarioNum:
        type: integer
      finishProcessorNum:
        type: integer
      id:
        type: integer
      interfaceStatusMap:
        additionalProperties:
          additionalProperties:
            type: integer
          type: object
        type: object
      name:
        type: string
      passAssertionNum:
        type: integer
      passInterfaceNum:
        type: integer
      passRequestNum:
        type: integer
      passScenarioNum:
        type: integer
      payload:
        type: string
      planId:
        type: integer
      progressStatus:
        $ref: '#/definitions/consts.ProgressStatus'
      projectId:
        type: integer
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      serialNumber:
        type: string
      startTime:
        type: string
      stat:
        type: string
      totalAssertionNum:
        type: integer
      totalInterfaceNum:
        type: integer
      totalProcessorNum:
        type: integer
      totalRequestNum:
        type: integer
      totalScenarioNum:
        type: integer
      updatedAt:
        type: string
    type: object
  model.PlanReportDetail:
    properties:
      createUserId:
        type: integer
      createUserName:
        type: string
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      duration:
        description: sec
        type: integer
      endTime:
        type: string
      execEnv:
        description: 执行环境
        type: string
      execEnvId:
        description: 执行环境Id
        type: integer
      execUserName:
        type: string
      failAssertionNum:
        type: integer
      failInterfaceNum:
        type: integer
      failRequestNum:
        type: integer
      failScenarioNum:
        type: integer
      finishProcessorNum:
        type: integer
      id:
        type: integer
      interfaceStatusMap:
        additionalProperties:
          additionalProperties:
            type: integer
          type: object
        type: object
      name:
        type: string
      passAssertionNum:
        type: integer
      passInterfaceNum:
        type: integer
      passRequestNum:
        type: integer
      passScenarioNum:
        type: integer
      payload:
        type: string
      planId:
        type: integer
      progressStatus:
        $ref: '#/definitions/consts.ProgressStatus'
      projectId:
        type: integer
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      scenarioReports:
        items:
          $ref: '#/definitions/model.ScenarioReportDetail'
        type: array
      serialNumber:
        type: string
      startTime:
        type: string
      stat:
        type: string
      totalAssertionNum:
        type: integer
      totalInterfaceNum:
        type: integer
      totalProcessorNum:
        type: integer
      totalRequestNum:
        type: integer
      totalScenarioNum:
        type: integer
      updatedAt:
        type: string
    type: object
  model.Processor:
    properties:
      children:
        items:
          $ref: '#/definitions/model.Processor'
        type: array
      comments:
        type: string
      createdAt:
        type: string
      createdBy:
        type: integer
      disabled:
        type: boolean
      endpointInterfaceId:
        type: integer
      entityCategory:
        $ref: '#/definitions/consts.ProcessorCategory'
      entityId:
        description: Debug Interface Id for ProcessorInterface type
        type: integer
      entityType:
        $ref: '#/definitions/consts.ProcessorType'
      id:
        type: integer
      method:
        $ref: '#/definitions/consts.HttpMethod'
      name:
        type: string
      ordr:
        type: integer
      parentId:
        type: integer
      processorInterfaceSrc:
        $ref: '#/definitions/consts.ProcessorInterfaceSrc'
      projectId:
        type: integer
      scenarioId:
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
      updatedAt:
        type: string
    type: object
  model.ProcessorData:
    properties:
      comments:
        type: string
      createdAt:
        type: string
      datapoolId:
        type: integer
      default:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      isRand:
        type: boolean
      name:
        type: string
      parentID:
        type: integer
      processorCategory:
        $ref: '#/definitions/consts.ProcessorCategory'
      processorID:
        type: integer
      processorType:
        $ref: '#/definitions/consts.ProcessorType'
      repeatTimes:
        type: integer
      separator:
        type: string
      src:
        $ref: '#/definitions/consts.DataItSrc'
      type:
        $ref: '#/definitions/consts.DataItType'
      updatedAt:
        type: string
      url:
        type: string
      variableName:
        type: string
    type: object
  model.Project:
    properties:
      adminId:
        type: integer
      adminName:
        type: string
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      environmentId:
        type: integer
      id:
        type: integer
      includeExample:
        type: boolean
      logo:
        type: string
      name:
        type: string
      orgId:
        type: integer
      schemaId:
        type: integer
      shortName:
        type: string
      spec:
        type: string
      spec2:
        type: string
      type:
        $ref: '#/definitions/serverConsts.ProjectType'
      updatedAt:
        type: string
    type: object
  model.ProjectMemberAudit:
    properties:
      applyUserId:
        type: integer
      applyUserName:
        type: string
      auditUserId:
        type: integer
      auditUserName:
        type: string
      createdAt:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      projectId:
        type: integer
      projectName:
        type: string
      projectRoleName:
        $ref: '#/definitions/consts.RoleType'
      status:
        $ref: '#/definitions/consts.AuditStatus'
      updatedAt:
        type: string
    type: object
  model.ProjectMemberRole:
    properties:
      adminId:
        type: integer
      adminName:
        type: string
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      environmentId:
        type: integer
      id:
        type: integer
      includeExample:
        type: boolean
      logo:
        type: string
      name:
        type: string
      orgId:
        type: integer
      roleId:
        type: integer
      roleName:
        $ref: '#/definitions/consts.RoleType'
      schemaId:
        type: integer
      shortName:
        type: string
      spec:
        type: string
      spec2:
        type: string
      type:
        $ref: '#/definitions/serverConsts.ProjectType'
      updatedAt:
        type: string
    type: object
  model.ProjectMenu:
    properties:
      code:
        type: string
      createdAt:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      parentId:
        type: integer
      path:
        type: string
      title:
        type: string
      type:
        type: string
      updatedAt:
        type: string
    type: object
  model.ProjectPerm:
    properties:
      act:
        type: string
      createdAt:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      displayName:
        type: string
      id:
        type: integer
      name:
        maxLength: 50
        minLength: 4
        type: string
      updatedAt:
        type: string
    required:
    - act
    - name
    type: object
  model.ProjectRole:
    properties:
      createdAt:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      displayName:
        type: string
      id:
        type: integer
      name:
        $ref: '#/definitions/consts.RoleType'
      updatedAt:
        type: string
    type: object
  model.Scenario:
    properties:
      categoryId:
        type: integer
      createUserId:
        type: integer
      createUserName:
        description: 用户登录名
        type: string
      createdAt:
        type: string
      creatorName:
        type: string
      currEnvId:
        type: integer
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      priority:
        type: string
      processor:
        $ref: '#/definitions/model.Processor'
      projectId:
        type: integer
      serialNumber:
        type: string
      serveId:
        type: integer
      status:
        $ref: '#/definitions/consts.TestStatus'
      type:
        $ref: '#/definitions/consts.TestType'
      updateUserId:
        type: integer
      updateUserName:
        type: string
      updatedAt:
        type: string
      version:
        type: number
    type: object
  model.ScenarioDetail:
    properties:
      categoryId:
        type: integer
      categoryName:
        type: string
      createUserId:
        type: integer
      createUserName:
        description: 用户登录名
        type: string
      createdAt:
        type: string
      creatorName:
        type: string
      currEnvId:
        type: integer
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      priority:
        type: string
      processor:
        $ref: '#/definitions/model.Processor'
      projectId:
        type: integer
      serialNumber:
        type: string
      serveId:
        type: integer
      status:
        $ref: '#/definitions/consts.TestStatus'
      type:
        $ref: '#/definitions/consts.TestType'
      updateUserId:
        type: integer
      updateUserName:
        type: string
      updatedAt:
        type: string
      version:
        type: number
    type: object
  model.ScenarioReport:
    properties:
      createUserId:
        type: integer
      createUserName:
        type: string
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      duration:
        description: sec
        type: integer
      endTime:
        type: string
      execEnv:
        type: string
      execEnvId:
        type: integer
      execUserName:
        type: string
      failAssertionNum:
        type: integer
      failInterfaceNum:
        type: integer
      failRequestNum:
        type: integer
      finishProcessorNum:
        type: integer
      id:
        type: integer
      interfaceStatusMap:
        additionalProperties:
          additionalProperties:
            type: integer
          type: object
        type: object
      logs:
        items:
          $ref: '#/definitions/model.ExecLogProcessor'
        type: array
      name:
        type: string
      passAssertionNum:
        type: integer
      passInterfaceNum:
        type: integer
      passRequestNum:
        type: integer
      payload:
        type: string
      planReportId:
        type: integer
      priority:
        type: string
      progressStatus:
        $ref: '#/definitions/consts.ProgressStatus'
      projectId:
        type: integer
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      scenarioId:
        type: integer
      serialNumber:
        type: string
      startTime:
        type: string
      stat:
        type: string
      totalAssertionNum:
        type: integer
      totalInterfaceNum:
        type: integer
      totalProcessorNum:
        type: integer
      totalRequestNum:
        type: integer
      updatedAt:
        type: string
    type: object
  model.ScenarioReportDetail:
    properties:
      createUserId:
        type: integer
      createUserName:
        type: string
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      duration:
        description: sec
        type: integer
      endTime:
        type: string
      execEnv:
        type: string
      execEnvId:
        type: integer
      execUserName:
        type: string
      failAssertionNum:
        type: integer
      failInterfaceNum:
        type: integer
      failRequestNum:
        type: integer
      finishProcessorNum:
        type: integer
      id:
        type: integer
      interfaceStatusMap:
        additionalProperties:
          additionalProperties:
            type: integer
          type: object
        type: object
      logs:
        items:
          $ref: '#/definitions/model.ExecLogProcessor'
        type: array
      name:
        type: string
      passAssertionNum:
        type: integer
      passInterfaceNum:
        type: integer
      passRequestNum:
        type: integer
      payload:
        type: string
      planReportId:
        type: integer
      priority:
        type: string
      progressStatus:
        $ref: '#/definitions/consts.ProgressStatus'
      projectId:
        type: integer
      resultStatus:
        $ref: '#/definitions/consts.ResultStatus'
      scenarioId:
        type: integer
      serialNumber:
        type: string
      startTime:
        type: string
      stat:
        type: string
      totalAssertionNum:
        type: integer
      totalInterfaceNum:
        type: integer
      totalProcessorNum:
        type: integer
      totalRequestNum:
        type: integer
      updatedAt:
        type: string
    type: object
  model.Serve:
    properties:
      Component:
        items:
          $ref: '#/definitions/model.ComponentSchema'
        type: array
      Securities:
        items:
          $ref: '#/definitions/model.ComponentSchemaSecurity'
        type: array
      createUser:
        type: string
      createdAt:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      projectId:
        type: integer
      servers:
        items:
          $ref: '#/definitions/model.ServeServer'
        type: array
      status:
        type: integer
      updatedAt:
        type: string
    type: object
  model.ServeServer:
    properties:
      createdAt:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      environmentId:
        type: integer
      environmentName:
        type: string
      id:
        type: integer
      serveId:
        type: integer
      serveName:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  model.ServeVersion:
    properties:
      createUser:
        type: string
      createdAt:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      serveId:
        type: integer
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.Snippet:
    properties:
      createdAt:
        type: string
      desc:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      script:
        type: string
      updatedAt:
        type: string
    type: object
  model.SwaggerSync:
    properties:
      ServeId:
        type: integer
      categoryId:
        type: integer
      createdAt:
        type: string
      cron:
        type: string
      disabled:
        type: boolean
      execTime:
        type: string
      id:
        type: integer
      projectId:
        type: integer
      switch:
        $ref: '#/definitions/consts.SwitchStatus'
      syncType:
        $ref: '#/definitions/consts.DataSyncType'
      updatedAt:
        type: string
      url:
        type: string
    type: object
  model.SysUser:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      disabled:
        type: boolean
      email:
        type: string
      id:
        type: integer
      intro:
        type: string
      name:
        type: string
      password:
        type: string
      profile:
        $ref: '#/definitions/model.SysUserProfile'
      role_ids:
        items:
          type: integer
        type: array
      updatedAt:
        type: string
      username:
        type: string
      vcode:
        type: string
    required:
    - password
    - username
    type: object
  model.SysUserProfile:
    properties:
      createdAt:
        type: string
      currProjectId:
        type: integer
      currServeId:
        type: integer
      currServerId:
        type: integer
      disabled:
        type: boolean
      id:
        type: integer
      phone:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  openapi.Schema:
    properties:
      $ref:
        type: string
      allOf:
        items:
          $ref: '#/definitions/openapi.SchemaRef'
        type: array
      anyOf:
        items:
          $ref: '#/definitions/openapi.SchemaRef'
        type: array
      description:
        type: string
      items:
        $ref: '#/definitions/openapi.SchemaRef'
      oneOf:
        items:
          $ref: '#/definitions/openapi.SchemaRef'
        type: array
      properties:
        $ref: '#/definitions/openapi.Schemas'
      ref:
        type: string
      type:
        type: string
    type: object
  openapi.SchemaRef:
    properties:
      ref:
        type: string
      value:
        $ref: '#/definitions/openapi.Schema'
    type: object
  openapi.Schemas:
    additionalProperties:
      $ref: '#/definitions/openapi.SchemaRef'
    type: object
  serverConsts.AuthType:
    enum:
    - apiKey
    - bearerToken
    - basicAuth
    type: string
    x-enum-varnames:
    - ApiKey
    - BearerToken
    - BasicAuth
  serverConsts.CategoryDiscriminator:
    enum:
    - endpoint
    - scenario
    - plan
    type: string
    x-enum-varnames:
    - EndpointCategory
    - ScenarioCategory
    - PlanCategory
  serverConsts.DiagnoseInterfaceType:
    enum:
    - dir
    - interface
    type: string
    x-enum-varnames:
    - DiagnoseInterfaceTypeDir
    - DiagnoseInterfaceTypeInterface
  serverConsts.DropPos:
    enum:
    - -1
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - Before
    - Inner
    - After
  serverConsts.EndpointCaseTreeType:
    enum:
    - dir
    - endpoint
    - case
    type: string
    x-enum-varnames:
    - EndpointCaseTreeTypeDir
    - EndpointCaseTreeTypeEndpoint
    - EndpointCaseTreeTypeCase
  serverConsts.NodeCreateMode:
    enum:
    - brother
    - child
    type: string
    x-enum-varnames:
    - Brother
    - Child
  serverConsts.NodeCreateType:
    enum:
    - dir
    - node
    type: string
    x-enum-varnames:
    - Dir
    - Node
  serverConsts.ProjectType:
    enum:
    - full
    - debug
    type: string
    x-enum-varnames:
    - Full
    - Debug
  serverDomain.ApplyProjectReq:
    properties:
      applyUserId:
        type: integer
      description:
        type: string
      projectId:
        type: integer
      projectRoleName:
        $ref: '#/definitions/consts.RoleType'
    required:
    - projectId
    - projectRoleName
    type: object
  serverDomain.AuditProjectPaginate:
    properties:
      applyUserId:
        type: integer
      auditUserId:
        type: integer
      field:
        type: string
      order:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      type:
        type: integer
    type: object
  serverDomain.AuditProjectReq:
    properties:
      id:
        type: integer
      status:
        $ref: '#/definitions/consts.AuditStatus'
    required:
    - id
    - status
    type: object
  serverDomain.BatchUpdateReq:
    properties:
      endpointIds:
        items:
          type: integer
        type: array
      fieldName:
        type: string
      value: {}
    type: object
  serverDomain.Category:
    properties:
      children:
        items:
          $ref: '#/definitions/serverDomain.Category'
        type: array
      count:
        type: integer
      desc:
        type: string
      id:
        type: integer
      name:
        type: string
      parentId:
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
    type: object
  serverDomain.CategoryCreateReq:
    properties:
      mode:
        type: string
      moduleId:
        type: string
      name:
        type: string
      projectId:
        type: integer
      serveId:
        type: integer
      targetId:
        type: integer
      type:
        $ref: '#/definitions/serverConsts.CategoryDiscriminator'
    type: object
  serverDomain.CategoryMoveReq:
    properties:
      dragKey:
        type: integer
      dropKey:
        type: integer
      dropPos:
        $ref: '#/definitions/serverConsts.DropPos'
      type:
        $ref: '#/definitions/serverConsts.CategoryDiscriminator'
    type: object
  serverDomain.CategoryReq:
    properties:
      desc:
        type: string
      id:
        type: integer
      name:
        type: string
      parent:
        type: integer
    type: object
  serverDomain.ChangeServeReq:
    properties:
      id:
        type: integer
    type: object
  serverDomain.CreateExampleReq:
    properties:
      code:
        type: string
      endpointId:
        type: integer
      method:
        $ref: '#/definitions/consts.HttpMethod'
    type: object
  serverDomain.DataReq:
    properties:
      clearData:
        type: boolean
      sys:
        $ref: '#/definitions/serverDomain.DataSys'
    type: object
  serverDomain.DataSys:
    properties:
      adminPassword:
        type: string
    type: object
  serverDomain.DatapoolReqPaginate:
    properties:
      field:
        type: string
      name:
        type: string
      order:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      projectId:
        type: integer
    type: object
  serverDomain.DiagnoseCurlImportReq:
    properties:
      content:
        type: string
      createBy:
        type: integer
      targetId:
        type: integer
    type: object
  serverDomain.DiagnoseInterface:
    properties:
      children:
        items:
          $ref: '#/definitions/serverDomain.DiagnoseInterface'
        type: array
      count:
        type: integer
      debugInterfaceId:
        type: integer
      desc:
        type: string
      id:
        type: integer
      isDir:
        type: boolean
      method:
        $ref: '#/definitions/consts.HttpMethod'
      ordr:
        type: integer
      parentId:
        type: integer
      projectId:
        type: integer
      serveId:
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
      title:
        type: string
      type:
        $ref: '#/definitions/serverConsts.DiagnoseInterfaceType'
      useId:
        type: integer
    type: object
  serverDomain.DiagnoseInterfaceImportReq:
    properties:
      createBy:
        type: integer
      interfaceIds:
        items:
          type: integer
        type: array
      targetId:
        type: integer
    type: object
  serverDomain.DiagnoseInterfaceMoveReq:
    properties:
      dragKey:
        type: integer
      dropKey:
        type: integer
      dropPos:
        $ref: '#/definitions/serverConsts.DropPos'
    type: object
  serverDomain.DiagnoseInterfaceSaveReq:
    properties:
      createdBy:
        type: integer
      id:
        type: integer
      mode:
        type: string
      parentId:
        type: integer
      projectId:
        type: integer
      serveId:
        type: integer
      title:
        type: string
      type:
        $ref: '#/definitions/serverConsts.DiagnoseInterfaceType'
      updatedBy:
        type: integer
    type: object
  serverDomain.DocumentRep:
    properties:
      adminId:
        type: integer
      adminName:
        type: string
      createdAt:
        type: string
      desc:
        type: string
      documentId:
        type: integer
      environment:
        items:
          $ref: '#/definitions/serverDomain.EnvironmentReq'
        type: array
      globalParams:
        additionalProperties: true
        type: object
      globalVars:
        items:
          $ref: '#/definitions/serverDomain.EnvironmentParam'
        type: array
      id:
        type: integer
      includeExample:
        type: boolean
      logo:
        type: string
      mock:
        items: {}
        type: array
      name:
        type: string
      orgId:
        type: integer
      schemaId:
        type: integer
      serves:
        items:
          $ref: '#/definitions/serverDomain.DocumentServe'
        type: array
      shortName:
        type: string
      type:
        $ref: '#/definitions/serverConsts.ProjectType'
      updatedAt:
        type: string
      version:
        type: string
    type: object
  serverDomain.DocumentReq:
    properties:
      documentId:
        type: integer
      endpointIds:
        items:
          type: integer
        type: array
      needDetail:
        type: boolean
      projectId:
        type: integer
      serveIds:
        items:
          type: integer
        type: array
    type: object
  serverDomain.DocumentServe:
    properties:
      component:
        items:
          $ref: '#/definitions/serverDomain.ServeSchemaReq'
        type: array
      createUser:
        type: string
      description:
        type: string
      endpoints:
        items:
          $ref: '#/definitions/serverDomain.EndpointReq'
        type: array
      id:
        type: integer
      name:
        type: string
      projectId:
        type: integer
      securities:
        items:
          $ref: '#/definitions/serverDomain.ServeSecurityReq'
        type: array
      servers:
        items:
          $ref: '#/definitions/serverDomain.ServeServer'
        type: array
      status:
        type: integer
    required:
    - name
    - projectId
    type: object
  serverDomain.DocumentShareReq:
    properties:
      documentId:
        type: integer
      endpointId:
        type: integer
      needDetail:
        type: boolean
      projectId:
        type: integer
    type: object
  serverDomain.DocumentVersionListReq:
    properties:
      needLatest:
        description: 需要展示实时版本这条假数据
        type: boolean
    type: object
  serverDomain.DocumentVersionReq:
    properties:
      endpointIds:
        items:
          type: integer
        type: array
      name:
        type: string
      version:
        type: string
    required:
    - version
    type: object
  serverDomain.EndpointCaseSaveReq:
    properties:
      createUserId:
        type: integer
      createUserName:
        type: string
      debugData:
        $ref: '#/definitions/domain.DebugData'
      debugInterfaceId:
        type: integer
      desc:
        type: string
      endpointId:
        type: integer
      endpointInterfaceId:
        type: integer
      id:
        type: integer
      method:
        $ref: '#/definitions/consts.HttpMethod'
      name:
        type: string
      projectId:
        type: integer
      serveId:
        type: integer
      usedBy:
        type: string
    type: object
  serverDomain.EndpointCaseTree:
    properties:
      caseInterfaceId:
        type: integer
      categoryId:
        type: integer
      children:
        items:
          $ref: '#/definitions/serverDomain.EndpointCaseTree'
        type: array
      count:
        type: integer
      debugInterfaceId:
        type: integer
      desc:
        type: string
      endpointId:
        type: integer
      id:
        type: string
      isDir:
        type: boolean
      key:
        type: integer
      method:
        type: string
      name:
        type: string
      ordr:
        type: integer
      parentId:
        type: string
      projectId:
        type: integer
      serveId:
        type: integer
      slots:
        $ref: '#/definitions/iris.Map'
      type:
        $ref: '#/definitions/serverConsts.EndpointCaseTreeType'
      useId:
        type: integer
    type: object
  serverDomain.EndpointInterfaceReqPaginate:
    properties:
      Keywords:
        type: string
      categoryId:
        type: integer
      field:
        type: string
      order:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      projectId:
        type: integer
      serveId:
        type: integer
    type: object
  serverDomain.EndpointReq:
    properties:
      CreateUser:
        type: string
      categoryId:
        type: integer
      curl:
        type: string
      description:
        type: string
      id:
        type: integer
      interfaces:
        items:
          $ref: '#/definitions/serverDomain.InterfaceResp'
        type: array
      path:
        type: string
      pathParams:
        items:
          $ref: '#/definitions/serverDomain.OpenApiParam'
        type: array
      projectId:
        type: integer
      serveId:
        type: integer
      serverId:
        type: integer
      status:
        type: integer
      title:
        type: string
      updateUser:
        type: string
      version:
        type: string
    required:
    - projectId
    - serveId
    - title
    type: object
  serverDomain.EndpointReqPaginate:
    properties:
      categoryId:
        type: integer
      createUser:
        items:
          type: string
        type: array
      field:
        type: string
      order:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      projectId:
        type: integer
      serveId:
        type: integer
      serveVersion:
        type: string
      status:
        items:
          type: integer
        type: array
      tagNames:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  serverDomain.EndpointTagReq:
    properties:
      id:
        type: integer
      tagNames:
        items:
          type: string
        type: array
    type: object
  serverDomain.EndpointVersionReq:
    properties:
      endpointId:
        type: integer
      version:
        type: string
    type: object
  serverDomain.EndpointVersions:
    properties:
      endpointId:
        type: integer
      version:
        type: string
    type: object
  serverDomain.EnvironmentParam:
    properties:
      defaultValue:
        type: string
      description:
        type: string
      name:
        type: string
      required:
        type: boolean
      type:
        type: string
    required:
    - name
    type: object
  serverDomain.EnvironmentParamsReq:
    properties:
      body:
        items:
          $ref: '#/definitions/serverDomain.EnvironmentParam'
        type: array
      cookie:
        items:
          $ref: '#/definitions/serverDomain.EnvironmentParam'
        type: array
      header:
        items:
          $ref: '#/definitions/serverDomain.EnvironmentParam'
        type: array
      projectId:
        type: integer
      query:
        items:
          $ref: '#/definitions/serverDomain.EnvironmentParam'
        type: array
    type: object
  serverDomain.EnvironmentReq:
    properties:
      id:
        type: integer
      name:
        type: string
      projectId:
        type: integer
      serveServers:
        items:
          $ref: '#/definitions/serverDomain.ServeServer'
        type: array
      vars:
        items:
          $ref: '#/definitions/serverDomain.EnvironmentVariable'
        type: array
    required:
    - name
    - projectId
    type: object
  serverDomain.EnvironmentVariable:
    properties:
      description:
        type: string
      localValue:
        type: string
      name:
        type: string
      remoteValue:
        type: string
    required:
    - localValue
    - name
    - remoteValue
    type: object
  serverDomain.ExtractorConditionQuickCreateReq:
    properties:
      conf:
        $ref: '#/definitions/domain.ExtractorBase'
      info:
        $ref: '#/definitions/domain.DebugInfo'
    type: object
  serverDomain.ImportEndpointDataReq:
    properties:
      categoryId:
        description: 所属分类
        type: integer
      dataSyncType:
        allOf:
        - $ref: '#/definitions/consts.DataSyncType'
        description: 数据同步方式
      driverType:
        allOf:
        - $ref: '#/definitions/convert.DriverType'
        description: 接口数据来源
      filePath:
        type: string
      openUrlImport:
        description: 开启url导入
        type: boolean
      projectId:
        type: integer
      serveId:
        description: 服务ID
        type: integer
      sourceType:
        $ref: '#/definitions/consts.SourceType'
      userId:
        type: integer
    required:
    - driverType
    - filePath
    - serveId
    type: object
  serverDomain.InterfaceResp:
    properties:
      body:
        type: string
      bodyType:
        type: string
      cookies:
        items:
          $ref: '#/definitions/serverDomain.OpenApiCookie'
        type: array
      description:
        type: string
      headers:
        items:
          $ref: '#/definitions/serverDomain.OpenApiHeader'
        type: array
      id:
        type: integer
      method:
        type: string
      mock:
        items: {}
        type: array
      name:
        type: string
      operationId:
        type: string
      params:
        items:
          $ref: '#/definitions/serverDomain.OpenApiParam'
        type: array
      requestBody:
        $ref: '#/definitions/domain.RequestBody'
      responseBodies:
        items:
          $ref: '#/definitions/domain.ResponseBody'
        type: array
      responseCodes:
        type: string
      security:
        type: string
      url:
        type: string
    type: object
  serverDomain.InterfaceYapiReq:
    properties:
      projectId:
        type: integer
      target:
        type: integer
      token:
        type: string
      yapiHost:
        type: string
    type: object
  serverDomain.InviteUserReq:
    properties:
      email:
        type: string
      projectId:
        type: integer
      roleName:
        $ref: '#/definitions/consts.RoleType'
      userId:
        type: integer
    type: object
  serverDomain.JsonContent:
    properties:
      data:
        type: string
      serveId:
        type: integer
    type: object
  serverDomain.LoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  serverDomain.LoginResp:
    properties:
      id:
        type: integer
      password:
        type: string
      token:
        type: string
    type: object
  serverDomain.MemberResp:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      roleId:
        type: integer
      roleName:
        $ref: '#/definitions/consts.RoleType'
      username:
        type: string
    type: object
  serverDomain.MessageReadReq:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      message_id:
        type: integer
      updatedAt:
        type: string
      user_id:
        type: integer
    type: object
  serverDomain.MockExpectRequestOption:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  serverDomain.MockExpectRequestOptions:
    additionalProperties:
      items:
        $ref: '#/definitions/serverDomain.MockExpectRequestOption'
      type: array
    type: object
  serverDomain.MockJsExpression:
    properties:
      desc:
        type: string
      expression:
        type: string
      format:
        type: string
      id:
        type: integer
      name:
        type: string
      ordr:
        type: integer
      result: {}
      type:
        type: string
    type: object
  serverDomain.OpenApiCookie:
    properties:
      Description:
        type: string
      default:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      example:
        type: string
      format:
        type: string
      maxItems:
        type: integer
      maxLength:
        type: integer
      minItems:
        type: integer
      minLength:
        type: integer
      multipleOf:
        type: integer
      name:
        type: string
      paramIn:
        $ref: '#/definitions/consts.ParamIn'
      pattern:
        type: string
      ref:
        type: string
      required:
        type: boolean
      type:
        type: string
      uniqueItems:
        type: boolean
      value:
        type: string
    type: object
  serverDomain.OpenApiHeader:
    properties:
      Description:
        type: string
      default:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      example:
        type: string
      format:
        type: string
      maxItems:
        type: integer
      maxLength:
        type: integer
      minItems:
        type: integer
      minLength:
        type: integer
      multipleOf:
        type: integer
      name:
        type: string
      paramIn:
        $ref: '#/definitions/consts.ParamIn'
      pattern:
        type: string
      ref:
        type: string
      required:
        type: boolean
      type:
        type: string
      uniqueItems:
        type: boolean
      value:
        type: string
    type: object
  serverDomain.OpenApiParam:
    properties:
      Description:
        type: string
      default:
        type: string
      description:
        type: string
      disabled:
        type: boolean
      example:
        type: string
      format:
        type: string
      maxItems:
        type: integer
      maxLength:
        type: integer
      minItems:
        type: integer
      minLength:
        type: integer
      multipleOf:
        type: integer
      name:
        type: string
      paramIn:
        $ref: '#/definitions/consts.ParamIn'
      pattern:
        type: string
      ref:
        type: string
      required:
        type: boolean
      type:
        type: string
      uniqueItems:
        type: boolean
      value:
        type: string
    type: object
  serverDomain.ParserRequest:
    properties:
      docContent:
        type: string
      endColumn:
        type: integer
      endLine:
        type: integer
      selectContent:
        type: string
      startColumn:
        type: integer
      startLine:
        type: integer
    required:
    - docContent
    - selectContent
    type: object
  serverDomain.ParserResponse:
    properties:
      expr:
        type: string
      exprType:
        type: string
      selectionType:
        $ref: '#/definitions/consts.NodeType'
    type: object
  serverDomain.PermReq:
    properties:
      act:
        type: string
      createdAt:
        type: string
      description:
        type: string
      displayName:
        type: string
      id:
        type: integer
      name:
        maxLength: 50
        minLength: 4
        type: string
      updatedAt:
        type: string
    required:
    - act
    - name
    type: object
  serverDomain.PermResp:
    properties:
      act:
        type: string
      createdAt:
        type: string
      description:
        type: string
      displayName:
        type: string
      id:
        type: integer
      name:
        maxLength: 50
        minLength: 4
        type: string
      updatedAt:
        type: string
    required:
    - act
    - name
    type: object
  serverDomain.PlanAddScenariosReq:
    properties:
      scenarioIds:
        items:
          type: integer
        type: array
    type: object
  serverDomain.PlanAndReportDetail:
    properties:
      adminName:
        description: 负责人姓名
        type: string
      createUserName:
        description: 创建人姓名
        type: string
      createdAt:
        type: string
      currEnvId:
        type: integer
      execEnv:
        description: 执行环境
        type: string
      execTime:
        description: 执行时间
        type: string
      execTimes:
        description: 执行次数
        type: integer
      executorName:
        description: 执行人姓名
        type: string
      id:
        description: 计划ID
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/consts.TestStatus'
        description: 状态
      testPassRate:
        description: 执行通过率
        type: string
      updateUserName:
        description: 最近更新人姓名
        type: string
      updatedAt:
        type: string
    type: object
  serverDomain.ProjectMemberRemoveReq:
    properties:
      projectId:
        type: integer
      userId:
        type: integer
    type: object
  serverDomain.ProjectReq:
    properties:
      adminId:
        type: integer
      adminName:
        type: string
      createdAt:
        type: string
      desc:
        type: string
      id:
        type: integer
      includeExample:
        type: boolean
      logo:
        type: string
      name:
        type: string
      orgId:
        type: integer
      schemaId:
        type: integer
      shortName:
        type: string
      type:
        $ref: '#/definitions/serverConsts.ProjectType'
      updatedAt:
        type: string
    type: object
  serverDomain.RegisterReq:
    properties:
      confirm:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - confirm
    - email
    - password
    - username
    type: object
  serverDomain.ReportReqPaginate:
    properties:
      createUserId:
        type: integer
      executeEndTime:
        type: string
      executeStartTime:
        type: string
      field:
        type: string
      keywords:
        type: string
      order:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      scenarioId:
        type: integer
    type: object
  serverDomain.ResRankingList:
    properties:
      userRankingList:
        items:
          $ref: '#/definitions/serverDomain.ResUserRanking'
        type: array
    type: object
  serverDomain.ResSummaryBugs:
    properties:
      blocker:
        type: number
      critical:
        type: number
      deadly:
        type: number
      major:
        type: number
      minor:
        type: number
      total:
        type: integer
    type: object
  serverDomain.ResSummaryCard:
    properties:
      coverage:
        type: number
      coverageHb:
        type: number
      execTotal:
        type: integer
      interfaceHb:
        type: number
      interfaceTotal:
        type: integer
      passRate:
        type: number
      projectTotal:
        type: integer
      scenarioHb:
        type: number
      scenarioTotal:
        type: integer
      userTotal:
        type: integer
    type: object
  serverDomain.ResSummaryDetail:
    properties:
      projectList:
        items:
          $ref: '#/definitions/serverDomain.ResSummaryDetails'
        type: array
      projectTotal:
        type: integer
      userProjectList:
        items:
          $ref: '#/definitions/serverDomain.ResSummaryDetails'
        type: array
      userProjectTotal:
        type: integer
    type: object
  serverDomain.ResSummaryDetails:
    properties:
      accessible:
        type: integer
      adminId:
        type: integer
      adminName:
        type: string
      bugTotal:
        type: integer
      coverage:
        type: number
      createdAt:
        type: string
      disabled:
        type: boolean
      execTotal:
        type: integer
      id:
        type: integer
      interfaceTotal:
        type: integer
      passRate:
        type: number
      projectDescr:
        type: string
      projectId:
        type: integer
      projectName:
        type: string
      projectShortName:
        type: string
      scenarioTotal:
        type: integer
      userList:
        items:
          $ref: '#/definitions/serverDomain.ResUserIdAndName'
        type: array
    type: object
  serverDomain.ResUserIdAndName:
    properties:
      userId:
        type: integer
      userName:
        type: string
    type: object
  serverDomain.ResUserRanking:
    properties:
      hb:
        type: integer
      scenarioTotal:
        type: integer
      sort:
        type: integer
      testCaseTotal:
        type: integer
      updatedAt:
        type: string
      userId:
        type: integer
      userName:
        type: string
    type: object
  serverDomain.ResetPasswordReq:
    properties:
      password:
        type: string
      username:
        type: string
      vcode:
        type: string
    required:
    - password
    - username
    - vcode
    type: object
  serverDomain.RoleReq:
    properties:
      createdAt:
        type: string
      description:
        type: string
      displayName:
        type: string
      id:
        type: integer
      name:
        maxLength: 50
        minLength: 4
        type: string
      perms:
        items:
          items:
            type: string
          type: array
        type: array
      updatedAt:
        type: string
    required:
    - name
    type: object
  serverDomain.RoleResp:
    properties:
      createdAt:
        type: string
      description:
        type: string
      displayName:
        type: string
      id:
        type: integer
      name:
        maxLength: 50
        minLength: 4
        type: string
      perms:
        items:
          items:
            type: string
          type: array
        type: array
      updatedAt:
        type: string
    required:
    - name
    type: object
  serverDomain.ScenarioAddCasesFromTreeReq:
    properties:
      createBy:
        type: integer
      selectedNodes:
        items:
          $ref: '#/definitions/serverDomain.EndpointCaseTree'
        type: array
      targetId:
        type: integer
    type: object
  serverDomain.ScenarioAddInterfacesFromTreeReq:
    properties:
      createBy:
        type: integer
      selectedNodes:
        items:
          $ref: '#/definitions/serverDomain.DiagnoseInterface'
        type: array
      targetId:
        type: integer
    type: object
  serverDomain.ScenarioAddInterfacesReq:
    properties:
      createBy:
        type: integer
      interfaceIds:
        items:
          type: integer
        type: array
      targetId:
        type: integer
    type: object
  serverDomain.ScenarioAddScenarioReq:
    properties:
      comments:
        type: string
      createBy:
        type: integer
      method:
        $ref: '#/definitions/consts.HttpMethod'
      mode:
        type: string
      name:
        type: string
      processorCategory:
        $ref: '#/definitions/consts.ProcessorCategory'
      processorInterfaceSrc:
        $ref: '#/definitions/consts.ProcessorInterfaceSrc'
      processorType:
        $ref: '#/definitions/consts.ProcessorType'
      projectId:
        type: integer
      srcProcessorId:
        type: integer
      targetProcessorCategory:
        $ref: '#/definitions/consts.ProcessorCategory'
      targetProcessorId:
        type: integer
      targetProcessorType:
        $ref: '#/definitions/consts.ProcessorType'
    type: object
  serverDomain.ScenarioCurlImportReq:
    properties:
      content:
        type: string
      createBy:
        type: integer
      targetId:
        type: integer
    type: object
  serverDomain.ScenarioNodeMoveReq:
    properties:
      dragKey:
        type: integer
      dropKey:
        type: integer
      dropPos:
        $ref: '#/definitions/serverConsts.DropPos'
    type: object
  serverDomain.ScenarioNodeReq:
    properties:
      id:
        type: integer
      mode:
        $ref: '#/definitions/serverConsts.NodeCreateMode'
      name:
        type: string
      projectId:
        type: integer
      target:
        type: integer
      type:
        $ref: '#/definitions/serverConsts.NodeCreateType'
    type: object
  serverDomain.ScenarioPlanReqPaginate:
    properties:
      adminId:
        type: integer
      categoryId:
        type: integer
      field:
        type: string
      keywords:
        type: string
      order:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      projectId:
        type: integer
      ref:
        type: boolean
      status:
        $ref: '#/definitions/consts.TestStatus'
    type: object
  serverDomain.ScenarioProcessorInfo:
    properties:
      comments:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  serverDomain.ServeReq:
    properties:
      createUser:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      projectId:
        type: integer
      status:
        type: integer
    required:
    - name
    - projectId
    type: object
  serverDomain.ServeReqPaginate:
    properties:
      field:
        type: string
      name:
        type: string
      order:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      projectId:
        type: integer
    type: object
  serverDomain.ServeSchemaPaginate:
    properties:
      field:
        type: string
      name:
        type: string
      order:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      serveId:
        type: integer
      tag:
        type: string
      type:
        type: string
    type: object
  serverDomain.ServeSchemaRefReq:
    properties:
      ref:
        type: string
      serveId:
        type: integer
    required:
    - ref
    - serveId
    type: object
  serverDomain.ServeSchemaReq:
    properties:
      content:
        type: string
      description:
        type: string
      examples:
        type: string
      id:
        type: integer
      name:
        type: string
      ref:
        type: string
      serveId:
        type: integer
      tag:
        type: string
      tags:
        type: string
      type:
        type: string
    required:
    - name
    - serveId
    type: object
  serverDomain.ServeSecurityPaginate:
    properties:
      field:
        type: string
      name:
        type: string
      order:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      serveId:
        type: integer
    type: object
  serverDomain.ServeSecurityReq:
    properties:
      default:
        type: boolean
      description:
        type: string
      id:
        type: integer
      in:
        type: string
      key:
        type: string
      name:
        type: string
      password:
        type: string
      projectId:
        type: integer
      serveId:
        type: integer
      token:
        type: string
      type:
        $ref: '#/definitions/serverConsts.AuthType'
      username:
        type: string
      value:
        type: string
    required:
    - name
    - projectId
    - serveId
    - type
    type: object
  serverDomain.ServeServer:
    properties:
      environmentName:
        type: string
      id:
        type: integer
      serveId:
        type: integer
      serverId:
        description: load by server id in scenario design page
        type: integer
      url:
        type: string
    type: object
  serverDomain.ServeVersionBindEndpointReq:
    properties:
      endpointVersions:
        items:
          $ref: '#/definitions/serverDomain.EndpointVersions'
        type: array
      serveId:
        type: integer
      serveVersion:
        type: string
    type: object
  serverDomain.ServeVersionPaginate:
    properties:
      createUser:
        type: string
      field:
        type: string
      order:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      serveId:
        type: integer
      version:
        type: string
    type: object
  serverDomain.ServeVersionReq:
    properties:
      createUser:
        type: string
      description:
        type: string
      id:
        type: integer
      serveId:
        type: integer
      value:
        type: string
    type: object
  serverDomain.SwaggerSyncReq:
    properties:
      categoryId:
        type: integer
      cron:
        type: string
      id:
        type: integer
      projectId:
        type: integer
      switch:
        $ref: '#/definitions/consts.SwitchStatus'
      syncType:
        $ref: '#/definitions/consts.DataSyncType'
      url:
        type: string
    type: object
  serverDomain.TestExprRequest:
    properties:
      content:
        type: string
      expr:
        type: string
      exprType:
        type: string
      type:
        $ref: '#/definitions/consts.HttpRespLangType'
    required:
    - content
    - expr
    - exprType
    - type
    type: object
  serverDomain.TestExprResponse:
    properties:
      result:
        type: string
    type: object
  serverDomain.UpdateDocumentVersionReq:
    properties:
      id:
        type: integer
      name:
        type: string
      version:
        type: string
    type: object
  serverDomain.UpdateProjectMemberReq:
    properties:
      projectId:
        type: integer
      projectRoleId:
        type: integer
      userId:
        type: integer
    type: object
  serverDomain.UpdateUserReq:
    properties:
      email:
        type: string
      newPassword:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  serverDomain.UpdateUserRoleReq:
    properties:
      roleIds:
        items:
          type: integer
        type: array
      userId:
        type: integer
    required:
    - userId
    type: object
  serverDomain.UserReq:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      intro:
        type: string
      name:
        type: string
      password:
        type: string
      role_ids:
        items:
          type: integer
        type: array
      updatedAt:
        type: string
      username:
        type: string
    required:
    - username
    type: object
  serverDomain.UserResp:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      intro:
        type: string
      name:
        type: string
      password:
        type: string
      projectRoles:
        additionalProperties:
          $ref: '#/definitions/consts.RoleType'
        type: object
      role_ids:
        items:
          type: integer
        type: array
      sysRoles:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      username:
        type: string
    required:
    - username
    type: object
info:
  contact:
    email: 462626@qq.com
    name: API Support
    url: https://github.com/aaronchen2k/deeptest/issues
  title: DeepTest服务端API文档
  version: "3.0"
paths:
  /api/v1/account/forgotPassword:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名或者密码
        in: query
        name: usernameOrPassword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 忘记密码
      tags:
      - 认证模块
      x-creator: wangzhen
  /api/v1/account/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 登录的请求体
        in: body
        name: LoginReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.LoginResp'
              type: object
      summary: 登录
      tags:
      - 认证模块
  /api/v1/account/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 注册的请求体
        in: body
        name: RegisterReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 注册
      tags:
      - 认证模块
  /api/v1/account/resetPassword:
    post:
      consumes:
      - application/json
      parameters:
      - description: 重置密码的参数
        in: body
        name: ResetPasswordReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ResetPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 重置密码
      tags:
      - 认证模块
  /api/v1/auth/getOAuth2AccessToken:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: accessTokenURL
        in: query
        name: accessTokenURL
        required: true
        type: string
      - description: clientId
        in: query
        name: clientId
        required: true
        type: string
      - description: clientSecret
        in: query
        name: clientSecret
        required: true
        type: string
      - description: code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/iris.Map'
              type: object
      summary: 调用认证服务生成访问令牌
      tags:
      - 授权模块
  /api/v1/auth/listOAuth2Token:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Auth2Token'
                  type: array
              type: object
      summary: 加载访问令牌到接口
      tags:
      - 授权模块
  /api/v1/auth/oauth2Authorization:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 生成OAuth认证信息的请求体
        in: body
        name: DebugInterfaceOAuth20
        required: true
        schema:
          $ref: '#/definitions/model.DebugInterfaceOAuth20'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    url:
                      type: string
                  type: object
              type: object
      summary: 生成OAuth认证信息
      tags:
      - 授权模块
  /api/v1/auth/removeToken:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: token id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除访问令牌
      tags:
      - 授权模块
  /api/v1/auth/useOAuth2AccessToken:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 接口ID
        in: query
        name: interfaceId
        required: true
        type: integer
      - description: name
        in: query
        name: name
        required: true
        type: string
      - description: token
        in: query
        name: token
        required: true
        type: string
      - description: tokenType
        in: query
        name: tokenType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    token:
                      type: string
                    tokenType:
                      type: string
                  type: object
              type: object
      summary: 加载访问令牌到接口
      tags:
      - 授权模块
  /api/v1/categories:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建分类的请求体
        in: body
        name: CategoryCreateReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.CategoryCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Category'
              type: object
      summary: 新建分类
      tags:
      - 分类管理
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建分类的请求体
        in: body
        name: CategoryReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.CategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.CategoryReq'
              type: object
      summary: 更新分类
      tags:
      - 分类管理
  /api/v1/categories/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 分类ID
        in: path
        name: id
        required: true
        type: integer
      - description: 类型
        enum:
        - endpoint
        - scenario
        - plan
        in: query
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除节点
      tags:
      - 分类管理
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 分类ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Category'
              type: object
      summary: 分类详情
      tags:
      - 分类管理
  /api/v1/categories/{id}/updateName:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 分类ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新节点名称的请求体
        in: body
        name: CategoryReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.CategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新节点名称
      tags:
      - 分类管理
  /api/v1/categories/load:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 类型
        in: query
        name: type
        required: true
        type: integer
      - description: 服务ID
        in: query
        name: serveId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.Category'
              type: object
      summary: 分类树状数据
      tags:
      - 分类管理
  /api/v1/categories/move:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 移动节点的请求体
        in: body
        name: CategoryMoveReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.CategoryMoveReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 移动节点
      tags:
      - 分类管理
  /api/v1/checkpoints:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建检查点的请求体
        in: body
        name: DebugInterfaceCheckpoint
        required: true
        schema:
          $ref: '#/definitions/model.DebugConditionCheckpoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.DebugConditionCheckpoint'
              type: object
      summary: 新建检查点
      tags:
      - 检查点
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新检查点的请求体
        in: body
        name: DebugInterfaceCheckpoint
        required: true
        schema:
          $ref: '#/definitions/model.DebugConditionCheckpoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新检查点
      tags:
      - 检查点
  /api/v1/checkpoints/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 检查点ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除检查点
      tags:
      - 检查点
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 检查点ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.DebugConditionCheckpoint'
              type: object
      summary: 检查点详情
      tags:
      - 检查点
  /api/v1/configs:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    demoTestSite:
                      type: string
                  type: object
              type: object
      summary: 获取服务端配置
      tags:
      - 配置
  /api/v1/datapools/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 数据池ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除数据池
      tags:
      - 数据池
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 数据池ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Datapool'
              type: object
      summary: 数据池详情
      tags:
      - 数据池
  /api/v1/datapools/{id}/disable:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 数据池ID
        in: path
        name: id
        required: true
        type: integer
      - description: 保存数据池的请求体
        in: body
        name: Datapool
        required: true
        schema:
          $ref: '#/definitions/model.Datapool'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 禁用数据池
      tags:
      - 数据池
  /api/v1/datapools/index:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 获取数据池列表的请求体
        in: body
        name: DatapoolReqPaginate
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DatapoolReqPaginate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.Datapool'
                        type: array
                    type: object
              type: object
      summary: 数据池列表
      tags:
      - 数据池
  /api/v1/datapools/save:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存数据池的请求体
        in: body
        name: Datapool
        required: true
        schema:
          $ref: '#/definitions/model.Datapool'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 保存数据池
      tags:
      - 数据池
  /api/v1/debugs/interface/load:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 获取调试接口请求的请求体
        in: body
        name: DebugReq
        required: true
        schema:
          $ref: '#/definitions/domain.DebugInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.DebugData'
              type: object
      summary: 获取调试接口请求
      tags:
      - 接口调试
  /api/v1/debugs/interface/loadForExec:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 获取调试接口用于执行的请求体
        in: body
        name: DebugReq
        required: true
        schema:
          $ref: '#/definitions/domain.DebugInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/agentExec.InterfaceExecObj'
              type: object
      summary: 获取调试接口用于执行
      tags:
      - 接口调试
  /api/v1/debugs/interface/save:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存调试接口的请求体
        in: body
        name: DebugReq
        required: true
        schema:
          $ref: '#/definitions/domain.DebugData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/agentExec.InterfaceExecObj'
              type: object
      summary: 保存调试接口
      tags:
      - 接口调试
  /api/v1/debugs/invoke:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: debugInterfaceId
        in: query
        name: debugInterfaceId
        required: true
        type: integer
      - description: endpointInterfaceId
        in: query
        name: endpointInterfaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.DebugInvoke'
                  type: array
              type: object
      summary: 调试记录列表
      tags:
      - 接口调试
  /api/v1/debugs/invoke/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除调试记录
      tags:
      - 接口调试
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    debugData:
                      $ref: '#/definitions/domain.DebugData'
                    resp:
                      $ref: '#/definitions/domain.DebugResponse'
                  type: object
              type: object
      summary: 调试记录详情
      tags:
      - 接口调试
  /api/v1/debugs/invoke/getLastResp:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: debugInterfaceId
        in: query
        name: debugInterfaceId
        required: true
        type: integer
      - description: endpointInterfaceId
        in: query
        name: endpointInterfaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.DebugResponse'
              type: object
      summary: 获取最后调试记录响应
      tags:
      - 接口调试
  /api/v1/debugs/invoke/submitResult:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: Agent提交接口执行结果的请求体
        in: body
        name: SubmitDebugResultRequest
        required: true
        schema:
          $ref: '#/definitions/domain.SubmitDebugResultRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: Agent提交接口执行结果
      tags:
      - 接口调试
  /api/v1/diagnoseInterfaces:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目ID
        in: query
        name: projectId
        required: true
        type: integer
      - description: 服务ID
        in: query
        name: serveId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/serverDomain.DiagnoseInterface'
                  type: array
              type: object
      summary: 获取测试接口列表
      tags:
      - 快捷调试
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建测试接口的请求体
        in: body
        name: DiagnoseInterfaceSaveReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DiagnoseInterfaceSaveReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/serverDomain.DiagnoseInterface'
                  type: array
              type: object
      summary: 新建测试接口
      tags:
      - 快捷调试
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新测试接口的请求体
        in: body
        name: DiagnoseInterfaceSaveReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DiagnoseInterfaceSaveReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/serverDomain.DiagnoseInterface'
                  type: array
              type: object
      summary: 更新测试接口
      tags:
      - 快捷调试
  /api/v1/diagnoseInterfaces/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 调试接口的id
        in: path
        name: id
        required: true
        type: integer
      - description: type
        in: query
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除测试接口
      tags:
      - 快捷调试
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 调试接口的id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.DiagnoseInterface'
              type: object
      summary: 获取测试接口详情
      tags:
      - 快捷调试
  /api/v1/diagnoseInterfaces/importCurl:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 导入cURL命令的请求体
        in: body
        name: DiagnoseCurlImportReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DiagnoseCurlImportReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.DiagnoseInterface'
              type: object
      summary: 导入cURL命令
      tags:
      - 快捷调试
  /api/v1/diagnoseInterfaces/importInterfaces:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 导入接口的请求体
        in: body
        name: DiagnoseInterfaceImportReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DiagnoseInterfaceImportReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.DiagnoseInterface'
              type: object
      summary: 导入接口
      tags:
      - 快捷调试
  /api/v1/diagnoseInterfaces/move:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 移动节点的请求体
        in: body
        name: DiagnoseInterfaceMoveReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DiagnoseInterfaceMoveReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 移动节点
      tags:
      - 快捷调试
  /api/v1/diagnoseInterfaces/saveDebugData:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存测试调试接口的请求体
        in: body
        name: DebugData
        required: true
        schema:
          $ref: '#/definitions/domain.DebugData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.DebugData'
              type: object
      summary: 保存测试调试接口
      tags:
      - 快捷调试
  /api/v1/document:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 查看接口文档列表的请求参数
        in: body
        name: DocumentReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DocumentReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.DocumentRep'
              type: object
      summary: 接口文档列表
      tags:
      - 接口文档
  /api/v1/document/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 文档ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除接口文档
      tags:
      - 接口文档
  /api/v1/document/get_share_content:
    get:
      consumes:
      - application/json
      parameters:
      - description: 查看接口文档的链接
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.DocumentRep'
              type: object
      summary: 查看分享的文档
      tags:
      - 接口文档
  /api/v1/document/publish:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 发布接口文档的请求参数
        in: body
        name: DocumentVersionReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DocumentVersionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 发布接口文档
      tags:
      - 接口文档
  /api/v1/document/share:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 生成分享接口文档的链接的请求参数
        in: body
        name: DocumentShareReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DocumentShareReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    code:
                      type: string
                  type: object
              type: object
      summary: 生成分享接口文档的链接
      tags:
      - 接口文档
  /api/v1/document/share_detail:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 文档ID
        in: query
        name: documentId
        required: true
        type: integer
      - description: endpointId
        in: query
        name: endpointId
        required: true
        type: integer
      - description: interfaceId
        in: query
        name: interfaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    interface:
                      $ref: '#/definitions/model.EndpointInterface'
                    servers:
                      items:
                        $ref: '#/definitions/model.ServeServer'
                      type: array
                  type: object
              type: object
      summary: 查看文档详情
      tags:
      - 接口文档
  /api/v1/document/update_version:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新文档版本信息的请求参数
        in: body
        name: UpdateDocumentVersionReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.UpdateDocumentVersionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新文档版本信息
      tags:
      - 接口文档
  /api/v1/document/version_list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 接口文档版本列表的请求参数
        in: body
        name: DocumentVersionListReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DocumentVersionListReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.EndpointDocument'
                  type: array
              type: object
      summary: 接口文档版本列表
      tags:
      - 接口文档
  /api/v1/endpoint/batchDelete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - collectionFormat: csv
        description: 设计器id
        in: query
        items:
          type: integer
        name: req
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 批量删除设计器
      tags:
      - 设计器
  /api/v1/endpoint/batchUpdateField:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 批量更新字段内容的请求参数
        in: body
        name: BatchUpdateReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.BatchUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 批量更新字段内容
      tags:
      - 设计器
  /api/v1/endpoint/copy:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 设计器id
        in: query
        name: id
        required: true
        type: integer
      - description: 设计器版本
        in: query
        name: version
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 复制设计器
      tags:
      - 设计器
  /api/v1/endpoint/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 设计器id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除设计器
      tags:
      - 设计器
  /api/v1/endpoint/detail:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 设计器id
        in: query
        name: id
        required: true
        type: integer
      - description: 设计器版本
        in: query
        name: version
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Endpoint'
              type: object
      summary: 设计器详情
      tags:
      - 设计器
  /api/v1/endpoint/develop:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 设计器id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 开发设计器
      tags:
      - 设计器
  /api/v1/endpoint/expire:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 设计器id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 禁用设计器
      tags:
      - 设计器
  /api/v1/endpoint/index:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 设计器列表的请求体
        in: body
        name: EndpointReqPaginate
        required: true
        schema:
          $ref: '#/definitions/serverDomain.EndpointReqPaginate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    result:
                      items:
                        $ref: '#/definitions/model.Endpoint'
                      type: array
                  type: object
              type: object
      summary: 设计器列表
      tags:
      - 设计器
  /api/v1/endpoint/publish:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 设计器id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 发布设计器
      tags:
      - 设计器
  /api/v1/endpoint/save:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存设计器的请求参数
        in: body
        name: EndpointReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.EndpointReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 保存设计器
      tags:
      - 设计器
  /api/v1/endpoint/tags:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.EndpointTagRel'
                  type: array
              type: object
      summary: 用例详情
      tags:
      - 设计器/标签
  /api/v1/endpoint/updateMockStatus:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: endpoint_id
        in: body
        name: id
        required: true
        schema:
          type: integer
      - description: 接口的mock禁用状态 true:禁用 false:启用
        in: body
        name: advancedMockDisabled
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 启用或者禁用接口所有期望
      tags:
      - 设计器
  /api/v1/endpoint/updateStatus:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 设计器id
        in: query
        name: id
        required: true
        type: integer
      - description: 设计器状态
        in: query
        name: status
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新设计器状态
      tags:
      - 设计器
  /api/v1/endpoint/updateTag:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新标签的请求参数
        in: body
        name: EndpointTagReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.EndpointTagReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新标签
      tags:
      - 设计器
  /api/v1/endpoint/version/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 添加设计器版本的请求参数
        in: body
        name: EndpointVersionReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.EndpointVersionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 添加设计器版本
      tags:
      - 设计器
  /api/v1/endpoint/version/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 设计器id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.EndpointVersion'
                  type: array
              type: object
      summary: 设计器版本列表
      tags:
      - 设计器
  /api/v1/endpoint/yaml:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 设计器信息转yaml的请求参数
        in: body
        name: EndpointReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.EndpointReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 设计器信息转yaml
      tags:
      - 设计器
  /api/v1/endpoints/cases/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 用例ID
        in: path
        name: id
        required: true
        type: integer
      - description: 删除用例的请求参数
        in: body
        name: EndpointCaseSaveReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.EndpointCaseSaveReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除用例
      tags:
      - 设计器/接口用例
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 用例ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.EndpointCase'
              type: object
      summary: 用例详情
      tags:
      - 设计器/接口用例
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 用例ID
        in: path
        name: id
        required: true
        type: integer
      - description: 保存用例的请求参数
        in: body
        name: EndpointCaseSaveReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.EndpointCaseSaveReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.EndpointCase'
                  type: array
              type: object
      summary: 保存用例
      tags:
      - 设计器/接口用例
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 用例ID
        in: path
        name: id
        required: true
        type: integer
      - description: 保存用例名称的请求参数
        in: body
        name: EndpointCaseSaveReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.EndpointCaseSaveReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.EndpointCase'
                  type: array
              type: object
      summary: 保存用例名称
      tags:
      - 设计器/接口用例
  /api/v1/endpoints/cases/copy:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用例ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.EndpointCase'
              type: object
      summary: 用例复制
      tags:
      - 设计器/接口用例
  /api/v1/endpoints/cases/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: endpointId
        in: query
        name: endpointId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.EndpointCase'
                  type: array
              type: object
      summary: 用例列表
      tags:
      - 设计器/接口用例
  /api/v1/endpoints/cases/loadTree:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 服务ID
        in: query
        name: serveId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/serverDomain.EndpointCaseTree'
                  type: array
              type: object
      summary: 分类接口用例树
      tags:
      - 设计器/接口用例
  /api/v1/endpoints/cases/saveDebugData:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存调试数据的请求参数
        in: body
        name: DebugData
        required: true
        schema:
          $ref: '#/definitions/domain.DebugData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.EndpointCase'
                  type: array
              type: object
      summary: 保存调试数据
      tags:
      - 设计器/接口用例
  /api/v1/endpoints/interfaces/importEndpointData:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 导入接口数据的请求参数
        in: body
        name: ImportEndpointDataReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ImportEndpointDataReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 导入接口数据
      tags:
      - 设计器/接口
  /api/v1/endpoints/interfaces/listForSelection:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 获取接口列表的请求参数
        in: body
        name: EndpointInterfaceReqPaginate
        required: true
        schema:
          $ref: '#/definitions/serverDomain.EndpointInterfaceReqPaginate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    result:
                      items:
                        $ref: '#/definitions/model.EndpointInterface'
                      type: array
                  type: object
              type: object
      summary: 接口列表
      tags:
      - 设计器/接口
  /api/v1/environments:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Environment'
                  type: array
              type: object
      summary: 环境列表(List)
      tags:
      - 环境管理
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建环境的请求参数
        in: body
        name: Environment
        required: true
        schema:
          $ref: '#/definitions/model.Environment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Environment'
              type: object
      summary: 新建环境
      tags:
      - 环境管理
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新环境的请求参数
        in: body
        name: Environment
        required: true
        schema:
          $ref: '#/definitions/model.Environment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新环境
      tags:
      - 环境管理
  /api/v1/environments/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 环境ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除环境(路径传参)
      tags:
      - 环境管理
  /api/v1/environments/changeEnvironment:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 环境id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 修改环境
      tags:
      - 环境管理
  /api/v1/environments/copy:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 环境ID
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 复制环境
      tags:
      - 环境管理
  /api/v1/environments/copyEnvironment:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 环境id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 复制环境
      tags:
      - 环境管理
  /api/v1/environments/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 环境ID
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除环境(param传参)
      tags:
      - 环境管理
  /api/v1/environments/envVars:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: serverId
        in: query
        name: serverId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.GlobalVar'
                  type: array
              type: object
      summary: 列出环境变量
      tags:
      - 环境管理/全局变量
  /api/v1/environments/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目ID
        in: query
        name: projectId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Environment'
                  type: array
              type: object
      summary: 环境列表(ListAll)
      tags:
      - 环境管理
  /api/v1/environments/order:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 修改环境顺序的请求参数
        in: body
        name: EnvironmentIdsReq
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 修改环境的顺序
      tags:
      - 环境管理
  /api/v1/environments/param:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目ID
        in: query
        name: projectId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 全局参数列表
      tags:
      - 环境管理/全局参数
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保保存全局参数的请求参数
        in: body
        name: EnvironmentParamsReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.EnvironmentParamsReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 保存全局参数
      tags:
      - 环境管理/全局参数
  /api/v1/environments/save:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存环境的请求参数
        in: body
        name: EnvironmentReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.EnvironmentReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 保存环境
      tags:
      - 环境管理
  /api/v1/environments/shareVars/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 环境变量ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Environment'
              type: object
      summary: 删除共享变量
      tags:
      - 环境管理/共享变量
  /api/v1/environments/shareVars/clear:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: interfaceId
        in: query
        name: interfaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Environment'
              type: object
      summary: 清空共享变量
      tags:
      - 环境管理/共享变量
  /api/v1/environments/vars:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建环境变量的请求参数
        in: body
        name: EnvironmentVar
        required: true
        schema:
          $ref: '#/definitions/model.EnvironmentVar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Environment'
              type: object
      summary: 新建环境变量
      tags:
      - 环境管理/全局变量
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新环境变量的请求参数
        in: body
        name: EnvironmentVar
        required: true
        schema:
          $ref: '#/definitions/model.EnvironmentVar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Environment'
              type: object
      summary: 更新环境变量
      tags:
      - 环境管理/全局变量
  /api/v1/environments/vars/clear:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 环境ID
        in: query
        name: environmentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Environment'
              type: object
      summary: 清空环境变量
      tags:
      - 环境管理/全局变量
  /api/v1/environments/vars/global:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.EnvironmentVar'
                  type: array
              type: object
      summary: 列出全局变量
      tags:
      - 环境管理/全局变量
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存全局变量的请求参数
        in: body
        name: EnvironmentVariable
        required: true
        schema:
          items:
            $ref: '#/definitions/serverDomain.EnvironmentVariable'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 保存全局变量
      tags:
      - 环境管理/全局变量
  /api/v1/environments/varsByEnv:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 环境ID
        in: query
        name: envId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.GlobalVar'
                  type: array
              type: object
      summary: 根据环境列出环境变量
      tags:
      - 环境管理/全局变量
  /api/v1/environments{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 环境ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Environment'
              type: object
      summary: 环境详情
      tags:
      - 环境管理
  /api/v1/extractors:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建提取器的请求参数
        in: body
        name: ExtractorConditionQuickCreateReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ExtractorConditionQuickCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 新建提取器
      tags:
      - 提取器
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新提取器的请求参数
        in: body
        name: DebugConditionExtractor
        required: true
        schema:
          $ref: '#/definitions/model.DebugConditionExtractor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新提取器
      tags:
      - 提取器
  /api/v1/extractors/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 提取器ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除提取器
      tags:
      - 提取器
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 提取器ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.DebugConditionExtractor'
              type: object
      summary: 提取器详情
      tags:
      - 提取器
  /api/v1/extractors/listExtractorVariableForCheckpoint:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 提取器变量列表的请求参数
        in: body
        name: DebugInfo
        required: true
        schema:
          $ref: '#/definitions/domain.DebugInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Variable'
                  type: array
              type: object
      summary: 提取器变量列表
      tags:
      - 提取器
  /api/v1/import/importSpec:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: targetId
        in: query
        name: targetId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 导入OpenApi文件
      tags:
      - 导入模块
  /api/v1/import/importYapi:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 导入yapi项目接口的请求参数
        in: body
        name: InterfaceYapiReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.InterfaceYapiReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 导入yapi项目接口
      tags:
      - 导入模块
  /api/v1/init/checkdb:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    needInit:
                      type: boolean
                  type: object
              type: object
      summary: 检测是否需要初始化项目
      tags:
      - 初始化模块
  /api/v1/init/initdb:
    post:
      consumes:
      - application/json
      parameters:
      - description: 初始化项目的请求体
        in: body
        name: DataReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.DataReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 初始化项目
      tags:
      - 初始化模块
  /api/v1/message:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: field
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      - description: 已读状态 0:全部 1:未读 2:已读
        in: query
        name: read_status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.Message'
                        type: array
                    type: object
              type: object
      summary: 消息列表
      tags:
      - 消息管理
  /api/v1/message/operateRead:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 已读操作的请求参数
        in: body
        name: MessageReadReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.MessageReadReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    id:
                      type: integer
                  type: object
              type: object
      summary: 已读操作
      tags:
      - 消息管理
  /api/v1/message/unreadCount:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    count:
                      type: integer
                  type: object
              type: object
      summary: 未读消息数
      tags:
      - 消息管理
  /api/v1/mockExpect:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 期望ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 删除期望
      tags:
      - Mock期望
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 期望ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.EndpointMockExpect'
              type: object
      summary: 期望详情
      tags:
      - Mock期望
  /api/v1/mockExpect/copy:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 期望ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 复制期望
      tags:
      - Mock期望
  /api/v1/mockExpect/createExample:
    post:
      consumes:
      - application/json
      parameters:
      - description: 生成响应体
        in: body
        name: createExampleReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.CreateExampleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 生成响应体
      tags:
      - Mock期望
  /api/v1/mockExpect/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: endpointId
        in: query
        name: endpointId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.EndpointMockExpect'
                  type: array
              type: object
      summary: 期望列表
      tags:
      - Mock期望
  /api/v1/mockExpect/order:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 对期望排序的请求体
        in: body
        name: MockExpectIdsReq
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 对期望排序
      tags:
      - Mock期望
  /api/v1/mockExpect/requestOptions:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: endpointId
        in: query
        name: endpointId
        required: true
        type: integer
      - description: endpointInterfaceId
        in: query
        name: endpointInterfaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.MockExpectRequestOptions'
              type: object
      summary: 获取请求参数下拉选项
      tags:
      - Mock期望
  /api/v1/mockExpect/save:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存期望的请求体
        in: body
        name: EndpointMockExpect
        required: true
        schema:
          $ref: '#/definitions/model.EndpointMockExpect'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 保存期望
      tags:
      - Mock期望
  /api/v1/mockExpect/updateExpectDisabled:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 期望ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      - description: 是否禁用
        in: body
        name: disabled
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 启用或者禁用单个期望
      tags:
      - Mock期望
  /api/v1/mockExpect/updateName:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 期望ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      - description: 期望名字
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 修改期望名字
      tags:
      - Mock期望
  /api/v1/mockScripts:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: update Mock Script Object
        in: body
        name: EndpointMockScript
        required: true
        schema:
          $ref: '#/definitions/model.EndpointMockScript'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新脚本
      tags:
      - Mock脚本管理
  /api/v1/mockScripts/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Endpoint ID
        in: path
        name: endpointId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.EndpointMockScript'
              type: object
      summary: 脚本详情
      tags:
      - Mock脚本管理
  /api/v1/mockjs/expressions:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/serverDomain.MockJsExpression'
                  type: array
              type: object
      summary: mockJs规则列表
      tags:
      - mock
  /api/v1/notRelationScenarioList:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: createUserId
        type: integer
      - in: query
        name: enabled
        type: string
      - in: query
        name: field
        type: string
      - in: query
        name: keywords
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      - in: query
        name: planId
        type: integer
      - in: query
        name: priority
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.Scenario'
                        type: array
                    type: object
              type: object
      summary: 计划中未绑定的场景列表
      tags:
      - 测试计划
  /api/v1/parser/parseHtml:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 解析HTML的请求参数
        in: body
        name: ParserRequest
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ParserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.ParserResponse'
              type: object
      summary: 解析HTML
      tags:
      - 解析模块
  /api/v1/parser/parseJson:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 解析JSON的请求参数
        in: body
        name: ParserRequest
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ParserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.ParserResponse'
              type: object
      summary: 解析JSON
      tags:
      - 解析模块
  /api/v1/parser/parseText:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 解析TEXT的请求参数
        in: body
        name: ParserRequest
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ParserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.ParserResponse'
              type: object
      summary: 解析TEXT
      tags:
      - 解析模块
  /api/v1/parser/parseXml:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 解析XML的请求参数
        in: body
        name: ParserRequest
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ParserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.ParserResponse'
              type: object
      summary: 解析XML
      tags:
      - 解析模块
  /api/v1/parser/testExpr:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 测试XPath或正则表达式的请求参数
        in: body
        name: TestExprRequest
        required: true
        schema:
          $ref: '#/definitions/serverDomain.TestExprRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.TestExprResponse'
              type: object
      summary: 测试XPath或正则表达式
      tags:
      - 解析模块
  /api/v1/perms:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: field
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/serverDomain.PermResp'
                        type: array
                    type: object
              type: object
      summary: 权限列表
      tags:
      - 权限模块
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建权限的请求参数
        in: body
        name: PermReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.PermReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    id:
                      type: integer
                  type: object
              type: object
      summary: 新建权限
      tags:
      - 权限模块
  /api/v1/perms/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 权限ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除权限
      tags:
      - 权限模块
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 权限ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.PermResp'
              type: object
      summary: 权限详情
      tags:
      - 权限模块
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 权限ID
        in: path
        name: id
        required: true
        type: integer
      - description: 编辑权限的请求参数
        in: body
        name: PermReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.PermReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 编辑权限
      tags:
      - 权限模块
  /api/v1/planScenariosList:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 计划ID
        in: query
        name: planId
        required: true
        type: integer
      - in: query
        name: createUserId
        type: integer
      - in: query
        name: enabled
        type: string
      - in: query
        name: field
        type: string
      - in: query
        name: keywords
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      - in: query
        name: priority
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.ScenarioDetail'
                        type: array
                    type: object
              type: object
      summary: 计划中的场景列表
      tags:
      - 测试计划
  /api/v1/plans:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: adminId
        type: string
      - in: query
        name: categoryId
        type: integer
      - in: query
        name: enabled
        type: string
      - in: query
        name: field
        type: string
      - in: query
        name: keywords
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      - in: query
        name: projectId
        type: integer
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.Plan'
                        type: array
                    type: object
              type: object
      summary: 计划列表
      tags:
      - 测试计划
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建计划的请求参数
        in: body
        name: Plan
        required: true
        schema:
          $ref: '#/definitions/model.Plan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Plan'
              type: object
      summary: 新建计划
      tags:
      - 测试计划
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新计划的请求参数
        in: body
        name: Plan
        required: true
        schema:
          $ref: '#/definitions/model.Plan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新计划
      tags:
      - 测试计划
  /api/v1/plans/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 计划ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除计划
      tags:
      - 测试计划
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 计划ID
        in: path
        name: id
        required: true
        type: integer
      - description: 是否需要详情
        in: query
        name: detail
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.PlanAndReportDetail'
              type: object
      summary: 计划详情
      tags:
      - 测试计划
  /api/v1/plans/{id}/addScenarios:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 计划ID
        in: path
        name: id
        required: true
        type: integer
      - description: 添加场景的请求参数
        in: body
        name: PlanAddScenariosReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.PlanAddScenariosReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 添加场景
      tags:
      - 测试计划
  /api/v1/plans/{id}/clone:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 计划ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 克隆计划
      tags:
      - 测试计划
  /api/v1/plans/{id}/removeScenario:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 计划ID
        in: path
        name: id
        required: true
        type: integer
      - description: 场景ID
        in: query
        name: scenarioId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 移除场景
      tags:
      - 测试计划
  /api/v1/plans/{id}/removeScenarios:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 计划ID
        in: path
        name: id
        required: true
        type: integer
      - description: 批量移除场景的请求参数
        in: body
        name: PlanAddScenariosReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.PlanAddScenariosReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 批量移除场景
      tags:
      - 测试计划
  /api/v1/plans/exec/getPlanReportNormalData:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 计划ID
        in: query
        name: id
        required: true
        type: integer
      - description: 环境ID
        in: query
        name: environmentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/agentDomain.Report'
              type: object
      summary: 获取计划执行中的静态内容
      tags:
      - 测试计划/执行计划
  /api/v1/plans/exec/loadExecPlan:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 计划ID
        in: query
        name: id
        required: true
        type: integer
      - description: 环境ID
        in: query
        name: environmentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/agentExec.PlanExecObj'
              type: object
      summary: 加载执行计划
      tags:
      - 测试计划/执行计划
  /api/v1/plans/exec/loadExecResult:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 计划ID
        in: query
        name: planId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.Report'
              type: object
      summary: 加载执行结果
      tags:
      - 测试计划/执行计划
  /api/v1/plans/exec/submitResult/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 计划ID
        in: path
        name: id
        required: true
        type: integer
      - description: 提交计划测试结果的请求参数
        in: body
        name: PlanExecResult
        required: true
        schema:
          $ref: '#/definitions/agentDomain.PlanExecResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.PlanReport'
              type: object
      summary: 提交测试结果
      tags:
      - 测试计划/执行计划
  /api/v1/plans/reports:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: createUserId
        type: string
      - in: query
        name: executeEndTime
        type: integer
      - in: query
        name: executeStartTime
        type: integer
      - in: query
        name: field
        type: string
      - in: query
        name: keywords
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      - in: query
        name: planId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.PlanReportDetail'
                        type: array
                    type: object
              type: object
      summary: 结果列表
      tags:
      - 测试报告
  /api/v1/plans/reports/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 测试报告ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除计划报告
      tags:
      - 测试报告
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 测试报告ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.PlanReportDetail'
              type: object
      summary: 结果详情
      tags:
      - 测试报告
  /api/v1/plans/statusDropDownOptions:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
      summary: 计划状态下拉选项
      tags:
      - 测试计划
  /api/v1/plans/testStageDropDownOptions:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
      summary: 计划测试阶段下拉选项
      tags:
      - 测试计划
  /api/v1/projects:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: enabled
        type: string
      - in: query
        name: field
        type: string
      - in: query
        name: keywords
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.Project'
                        type: array
                    type: object
              type: object
      summary: 项目列表
      tags:
      - 项目管理
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: CreateExpression project Request Object
        in: body
        name: ProjectReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ProjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    id:
                      type: integer
                  type: object
              type: object
      summary: 创建项目
      tags:
      - 项目管理
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: update project Request Object
        in: body
        name: ProjectReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ProjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新项目
      tags:
      - 项目管理
  /api/v1/projects/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目ID
        in: path
        name: id
        required: true
        type: integer
      - in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除项目
      tags:
      - 项目管理
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Project'
              type: object
      summary: 项目详情
      tags:
      - 项目管理
  /api/v1/projects/apply:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 申请项目成员的请求体
        in: body
        name: ApplyProjectReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ApplyProjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 申请项目成员
      tags:
      - 项目管理
  /api/v1/projects/audit:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 审批操作的请求体
        in: body
        name: AuditProjectReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.AuditProjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 审批操作
      tags:
      - 项目管理
  /api/v1/projects/auditList:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 申请加入审批列表的请求体
        in: body
        name: AuditProjectPaginate
        required: true
        schema:
          $ref: '#/definitions/serverDomain.AuditProjectPaginate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.ProjectMemberAudit'
                        type: array
                    type: object
              type: object
      summary: 申请加入审批列表
      tags:
      - 项目管理
  /api/v1/projects/auditUsers:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 要申请的项目ID
        in: query
        name: projectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.SysUser'
                  type: array
              type: object
      summary: 申请加入项目的审批人
      tags:
      - 项目管理
  /api/v1/projects/changeProject:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    id:
                      type: integer
                  type: object
              type: object
      summary: 切换用户默认项目
      tags:
      - 项目管理
  /api/v1/projects/changeUserRole:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新项目成员角色的请求体
        in: body
        name: UpdateProjectMemberReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.UpdateProjectMemberReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新项目成员的角色
      tags:
      - 项目管理
  /api/v1/projects/checkProjectAndUser:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目缩写
        in: query
        name: project_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Project'
              type: object
      summary: 校验项目和成员是否存在
      tags:
      - 项目管理
  /api/v1/projects/getByUser:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    ' currProject':
                      $ref: '#/definitions/model.Project'
                    ' recentProjects':
                      items:
                        $ref: '#/definitions/model.Project'
                      type: array
                    projects:
                      items:
                        $ref: '#/definitions/model.ProjectMemberRole'
                      type: array
                  type: object
              type: object
      summary: 获取用户参与的项目
      tags:
      - 项目管理
  /api/v1/projects/members:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: enabled
        type: string
      - in: query
        name: field
        type: string
      - in: query
        name: keywords
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/serverDomain.MemberResp'
                        type: array
                    type: object
              type: object
      summary: 获取项目成员
      tags:
      - 项目管理
  /api/v1/projects/menus/userMenuList:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    result:
                      items:
                        $ref: '#/definitions/model.ProjectMenu'
                      type: array
                  type: object
              type: object
      summary: 项目中用户的左侧菜单栏列表
      tags:
      - 项目菜单
  /api/v1/projects/perms/rolePermList:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: field
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      - in: query
        name: role_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.ProjectPerm'
                        type: array
                    type: object
              type: object
      summary: 项目角色的权限列表
      tags:
      - 项目权限
  /api/v1/projects/perms/rolesList:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.ProjectRole'
                        type: array
                    type: object
              type: object
      summary: 所有项目角色列表
      tags:
      - 项目权限
  /api/v1/projects/perms/userPermList:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: field
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.ProjectPerm'
                        type: array
                    type: object
              type: object
      summary: 项目中用户的权限列表
      tags:
      - 项目权限
  /api/v1/projects/perms/userRole:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        $ref: '#/definitions/model.ProjectRole'
                    type: object
              type: object
      summary: 获取项目中用户的角色
      tags:
      - 项目权限
  /api/v1/projects/removeMember:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 删除项目成员的请求体
        in: body
        name: ProjectMemberRemoveReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ProjectMemberRemoveReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除项目成员
      tags:
      - 项目管理
  /api/v1/roles:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: field
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/serverDomain.RoleResp'
                        type: array
                    type: object
              type: object
      summary: 角色列表
      tags:
      - 角色模块
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建角色的请求参数
        in: body
        name: RoleReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.RoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    id:
                      type: integer
                  type: object
              type: object
      summary: 新建角色
      tags:
      - 角色模块
  /api/v1/roles/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.RoleResp'
              type: object
      summary: 删除角色
      tags:
      - 角色模块
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.RoleResp'
              type: object
      summary: 角色列表
      tags:
      - 角色模块
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 编辑角色的请求参数
        in: body
        name: RoleReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.RoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 编辑角色
      tags:
      - 角色模块
  /api/v1/roles/all:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    result:
                      items:
                        $ref: '#/definitions/serverDomain.RoleResp'
                      type: array
                  type: object
              type: object
      summary: 无分页的角色列表
      tags:
      - 角色模块
  /api/v1/scenarios:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: categoryId
        type: integer
      - in: query
        name: enabled
        type: string
      - in: query
        name: field
        type: string
      - in: query
        name: keywords
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      - in: query
        name: priority
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.Scenario'
                        type: array
                    type: object
              type: object
      summary: 场景列表
      tags:
      - 场景模块
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建场景的请求参数
        in: body
        name: Scenario
        required: true
        schema:
          $ref: '#/definitions/model.Scenario'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Scenario'
              type: object
      summary: 新建场景
      tags:
      - 场景模块
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新场景的请求参数
        in: body
        name: Scenario
        required: true
        schema:
          $ref: '#/definitions/model.Scenario'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新场景
      tags:
      - 场景模块
  /api/v1/scenarios/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除场景
      tags:
      - 场景模块
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Scenario'
              type: object
      summary: 场景详情
      tags:
      - 场景模块
  /api/v1/scenarios/{id}/addPlans:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 关联计划
      tags:
      - 场景模块
  /api/v1/scenarios/{id}/plans:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: path
        name: id
        required: true
        type: integer
      - description: 查询关联计划列表的参数
        in: body
        name: ScenarioPlanReqPaginate
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ScenarioPlanReqPaginate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.Plan'
                        type: array
                    type: object
              type: object
      summary: 关联计划列表
      tags:
      - 场景模块
  /api/v1/scenarios/{id}/removePlans:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: path
        name: id
        required: true
        type: integer
      - description: 计划ID
        in: body
        name: '""'
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 取消计划关联
      tags:
      - 场景模块
  /api/v1/scenarios/{id}/updatePriority:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: path
        name: id
        required: true
        type: integer
      - description: 场景优先级
        in: query
        name: priority
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新优先级
      tags:
      - 场景模块
  /api/v1/scenarios/{id}/updateStatus:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: path
        name: id
        required: true
        type: integer
      - description: 场景状态
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新计划状态
      tags:
      - 场景模块
  /api/v1/scenarios/exec/getScenarioNormalData:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: query
        name: id
        required: true
        type: integer
      - description: 环境ID
        in: query
        name: environmentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/agentDomain.Report'
              type: object
      summary: 获取场景执行初始化信息
      tags:
      - 场景模块/场景执行
  /api/v1/scenarios/exec/loadExecResult:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: query
        name: scenarioId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.Report'
              type: object
      summary: 加载执行结果
      tags:
      - 场景模块/场景执行
  /api/v1/scenarios/exec/loadExecScenario:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: query
        name: id
        required: true
        type: integer
      - description: 环境ID
        in: query
        name: environmentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/agentExec.ScenarioExecObjMsg'
              type: object
      summary: 加载执行场景
      tags:
      - 场景模块/场景执行
  /api/v1/scenarios/exec/submitResult/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: path
        name: id
        required: true
        type: integer
      - description: 场景执行结果
        in: body
        name: ScenarioExecResult
        required: true
        schema:
          $ref: '#/definitions/agentDomain.ScenarioExecResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.ScenarioReport'
              type: object
      summary: 提交测试结果
      tags:
      - 场景模块/场景执行
  /api/v1/scenarios/interface/resetDebugData:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: scenarioProcessorId
        in: query
        name: scenarioProcessorId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Processor'
              type: object
      summary: 重置场景调试接口
      tags:
      - 场景模块/场景调试
  /api/v1/scenarios/interface/saveDebugData:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存场景调试接口的请求参数
        in: body
        name: DebugData
        required: true
        schema:
          $ref: '#/definitions/domain.DebugData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 保存场景调试接口
      tags:
      - 场景模块/场景调试
  /api/v1/scenarios/listByProject:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Scenario'
                  type: array
              type: object
      summary: 当前项目下的所有场景
      tags:
      - 场景模块
  /api/v1/scenarios/load:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 场景ID
        in: query
        name: scenarioId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/agentExec.Processor'
              type: object
      summary: 场景树状数据
      tags:
      - 场景模块
  /api/v1/scenarios/nodes/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 节点ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除节点
      tags:
      - 场景模块/编排节点
  /api/v1/scenarios/nodes/{id}/disableOrNot:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 节点ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 禁用节点
      tags:
      - 场景模块/编排节点
  /api/v1/scenarios/nodes/{id}/updateName:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 节点ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新节点名称的请求参数
        in: body
        name: ScenarioNodeReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ScenarioNodeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新节点名称
      tags:
      - 场景模块/编排节点
  /api/v1/scenarios/nodes/addInterfacesFromCase:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 添加调接口用例的请求参数
        in: body
        name: ScenarioAddCasesFromTreeReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ScenarioAddCasesFromTreeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Processor'
              type: object
      summary: 添加接口用例
      tags:
      - 场景模块/编排节点
  /api/v1/scenarios/nodes/addInterfacesFromDefine:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 添加定义接口的请求参数
        in: body
        name: ScenarioAddInterfacesReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ScenarioAddInterfacesReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Processor'
              type: object
      summary: 添加定义接口
      tags:
      - 场景模块/编排节点
  /api/v1/scenarios/nodes/addInterfacesFromTest:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 添加调试接口的请求参数
        in: body
        name: ScenarioAddInterfacesFromTreeReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ScenarioAddInterfacesFromTreeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Processor'
              type: object
      summary: 添加调试接口
      tags:
      - 场景模块/编排节点
  /api/v1/scenarios/nodes/addProcessor:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建处理器的请求参数
        in: body
        name: ScenarioAddScenarioReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ScenarioAddScenarioReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Processor'
              type: object
      summary: 新建处理器
      tags:
      - 场景模块/编排节点
  /api/v1/scenarios/nodes/importCurl:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 导入cURL命令的请求体
        in: body
        name: DiagnoseCurlImportReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ScenarioCurlImportReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Processor'
              type: object
      summary: 导入cURL命令
      tags:
      - 场景模块/编排节点
  /api/v1/scenarios/nodes/move:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 移动节点的请求参数
        in: body
        name: ScenarioNodeMoveReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ScenarioNodeMoveReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 移动节点
      tags:
      - 场景模块/编排节点
  /api/v1/scenarios/processors/{category}/save:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: category
        in: path
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.ProcessorData'
              type: object
      summary: 保存配置信息
      tags:
      - 场景模块/处理器
  /api/v1/scenarios/processors/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 节点ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 场景节点详情
      tags:
      - 场景模块/处理器
  /api/v1/scenarios/processors/saveProcessorInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存基本信息的请求参数
        in: body
        name: ScenarioProcessorInfo
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ScenarioProcessorInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    name:
                      type: string
                  type: object
              type: object
      summary: 保存基本信息
      tags:
      - 场景模块/处理器
  /api/v1/scenarios/reports:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 获取结果列表的请求参数
        in: body
        name: ReportReqPaginate
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ReportReqPaginate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.ScenarioReport'
                        type: array
                    type: object
              type: object
      summary: 结果列表
      tags:
      - 场景模块/场景报告
  /api/v1/scenarios/reports/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 报告ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除报告
      tags:
      - 场景模块/场景报告
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 报告ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.ScenarioReport'
              type: object
      summary: 结果详情
      tags:
      - 场景模块/场景报告
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 报告ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 创建报告
      tags:
      - 场景模块/场景报告
  /api/v1/serves/changeServe:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 切换用户当前服务的请求参数
        in: body
        name: ChangeServeReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ChangeServeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Serve'
              type: object
      summary: 切换用户当前服务
      tags:
      - 服务管理
  /api/v1/serves/copy:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 服务ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 复制服务
      tags:
      - 服务管理
  /api/v1/serves/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 服务ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除服务
      tags:
      - 服务管理
  /api/v1/serves/detail:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 服务ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Serve'
              type: object
      summary: 服务详情
      tags:
      - 服务管理
  /api/v1/serves/expire:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 服务ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 禁用服务
      tags:
      - 服务管理
  /api/v1/serves/index:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 服务列表的请求参数
        in: body
        name: ServeReqPaginate
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeReqPaginate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.Serve'
                        type: array
                    type: object
              type: object
      summary: 服务列表
      tags:
      - 服务管理
  /api/v1/serves/listByProject:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    currServe:
                      $ref: '#/definitions/model.Serve'
                    serves:
                      items:
                        $ref: '#/definitions/model.Serve'
                      type: array
                  type: object
              type: object
      summary: 获取项目下的服务
      tags:
      - 服务管理
  /api/v1/serves/save:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存服务的请求参数
        in: body
        name: ServeReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 保存服务
      tags:
      - 服务管理
  /api/v1/serves/saveSwaggerSync:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存同步信息的请求参数
        in: body
        name: SwaggerSyncReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.SwaggerSyncReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.SwaggerSync'
              type: object
      summary: 保存同步信息
      tags:
      - 自动同步
  /api/v1/serves/schema/copy:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: Schema ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 复制Schema
      tags:
      - 服务管理/schema
  /api/v1/serves/schema/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: schema ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除Schema
      tags:
      - 服务管理/schema
  /api/v1/serves/schema/detail:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 获取Schema的请求参数
        in: body
        name: ServeSchemaRefReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeSchemaRefReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.ComponentSchema'
              type: object
      summary: 获取Schema
      tags:
      - 服务管理/schema
  /api/v1/serves/schema/example2schema:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: example转schema的请求参数
        in: body
        name: JsonContent
        required: true
        schema:
          $ref: '#/definitions/serverDomain.JsonContent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/openapi.Schema'
              type: object
      summary: example转schema
      tags:
      - 服务管理/schema
  /api/v1/serves/schema/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: Schema列表的请求参数
        in: body
        name: ServeSchemaPaginate
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeSchemaPaginate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.ComponentSchema'
                        type: array
                    type: object
              type: object
      summary: Schema列表
      tags:
      - 服务管理/schema
  /api/v1/serves/schema/save:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存Schema的请求参数
        in: body
        name: ServeSchemaReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeSchemaReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 保存Schema
      tags:
      - 服务管理/schema
  /api/v1/serves/schema/schema2example:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: Schema生成Example的请求参数
        in: body
        name: JsonContent
        required: true
        schema:
          $ref: '#/definitions/serverDomain.JsonContent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: Schema生成Example
      tags:
      - 服务管理/schema
  /api/v1/serves/schema/schema2yaml:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: schema转yaml的请求参数
        in: body
        name: JsonContent
        required: true
        schema:
          $ref: '#/definitions/serverDomain.JsonContent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: schema转yaml
      tags:
      - 服务管理/schema
  /api/v1/serves/security/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 授权ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除授权
      tags:
      - 服务管理/授权
  /api/v1/serves/security/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 授权列表的请求参数
        in: body
        name: ServeSecurityPaginate
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeSecurityPaginate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.ComponentSchemaSecurity'
                        type: array
                    type: object
              type: object
      summary: 授权列表
      tags:
      - 服务管理/授权
  /api/v1/serves/security/save:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存授权的请求参数
        in: body
        name: ServeSecurityReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeSecurityReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 保存授权
      tags:
      - 服务管理/授权
  /api/v1/serves/server/changeServer:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 服务列表的请求参数
        in: body
        name: ServeServer
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeServer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.ServeServer'
              type: object
      summary: 切换环境
      tags:
      - 服务管理
  /api/v1/serves/server/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 环境列表的请求参数
        in: body
        name: ServeServer
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeServer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    ' currServer':
                      $ref: '#/definitions/model.ServeServer'
                    servers:
                      items:
                        $ref: '#/definitions/model.ServeServer'
                      type: array
                  type: object
              type: object
      summary: 环境列表(不分页)
      tags:
      - 服务管理
  /api/v1/serves/swaggerSyncDetail:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.SwaggerSync'
              type: object
      summary: 获取同步信息
      tags:
      - 自动同步
  /api/v1/serves/version/bindEndpoint:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 服务版本关联接口的请求参数
        in: body
        name: ServeVersionBindEndpointReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeVersionBindEndpointReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 关联接口
      tags:
      - 服务管理/版本
  /api/v1/serves/version/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 服务版本ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除版本
      tags:
      - 服务管理/版本
  /api/v1/serves/version/expire:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 服务版本ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 禁用版本
      tags:
      - 服务管理/版本
  /api/v1/serves/version/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 服务版本列表的请求参数
        in: body
        name: ServeVersionPaginate
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeVersionPaginate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/model.ServeVersion'
                        type: array
                    type: object
              type: object
      summary: 版本列表
      tags:
      - 服务管理/版本
  /api/v1/serves/version/save:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 保存服务版本的请求参数
        in: body
        name: ServeVersionReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.ServeVersionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  type: integer
              type: object
      summary: 保存版本
      tags:
      - 服务管理/版本
  /api/v1/shareVars/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 变量ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除共享变量
      tags:
      - 共享变量
  /api/v1/shareVars/clear:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 清空共享变量的请求参数
        in: body
        name: DebugInfo
        required: true
        schema:
          $ref: '#/definitions/domain.DebugInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 清空共享变量
      tags:
      - 共享变量
  /api/v1/shareVars/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 列出变量列表的请求参数
        in: body
        name: DebugInfo
        required: true
        schema:
          $ref: '#/definitions/domain.DebugInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.GlobalVar'
                  type: array
              type: object
      summary: 列出变量列表
      tags:
      - 共享变量
  /api/v1/snippets:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 脚本名
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Snippet'
              type: object
      summary: 获取详情
      tags:
      - 脚本
  /api/v1/summary/bugs/{projectId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目ID
        in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.ResSummaryBugs'
              type: object
      summary: 汇总bug信息
      tags:
      - 汇总
  /api/v1/summary/card/{projectId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 项目ID
        in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.ResSummaryCard'
              type: object
      summary: 汇总卡片位信息
      tags:
      - 汇总
  /api/v1/summary/collection/{store}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: string
        in: path
        name: store
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 汇总数据
      tags:
      - 汇总
  /api/v1/summary/details:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.ResSummaryDetail'
              type: object
      summary: 汇总项目详情
      tags:
      - 汇总
  /api/v1/summary/projectUserRanking/{cycle}/{projectId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: cycle
        in: path
        name: cycle
        required: true
        type: integer
      - description: 项目ID
        in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.ResRankingList'
              type: object
      summary: 汇总项目用户排行数据
      tags:
      - 汇总
  /api/v1/upload:
    post:
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 是否是数据池
        in: query
        name: isDatapool
        required: true
        type: boolean
      - description: 文件
        in: formData
        name: file
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    data:
                      type: object
                    path:
                      type: string
                  type: object
              type: object
      summary: 上传文件
      tags:
      - 上传文件模块
  /api/v1/users:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - in: query
        name: field
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      - in: query
        name: userName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/_domain.PageData'
                  - properties:
                      result:
                        items:
                          $ref: '#/definitions/serverDomain.UserResp'
                        type: array
                    type: object
              type: object
      summary: 用户列表
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 新建用户的请求参数
        in: body
        name: UserReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.UserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 新建用户
      tags:
      - 用户管理
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 删除用户
      tags:
      - 用户管理
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.UserResp'
              type: object
      summary: 用户详情
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 编辑用户的请求参数
        in: body
        name: UserReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.UserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 编辑用户
      tags:
      - 用户管理
  /api/v1/users/change_avatar:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 头像
        in: body
        name: Avatar
        required: true
        schema:
          $ref: '#/definitions/model.Avatar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 修改头像
      tags:
      - 用户管理
  /api/v1/users/changeUserSysRole:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 更新用户系统角色的请求参数
        in: body
        name: UpdateUserRoleReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.UpdateUserRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 更新用户系统角色
      tags:
      - 用户管理
  /api/v1/users/clear:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 清空 token
      tags:
      - 用户管理
  /api/v1/users/invite:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 邀请用户的请求参数
        in: body
        name: InviteUserReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.InviteUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 邀请用户
      tags:
      - 用户管理
  /api/v1/users/logout:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 退出登录
      tags:
      - 用户管理
  /api/v1/users/profile:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.UserResp'
              type: object
      summary: 个人信息
      tags:
      - 用户管理
  /api/v1/users/updateEmail:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 修改邮箱的请求参数
        in: body
        name: UpdateUserReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.UpdateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/_domain.Response'
      summary: 修改邮箱
      tags:
      - 用户管理
  /api/v1/users/updateName:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 修改名称的请求参数
        in: body
        name: UpdateUserReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.UpdateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.UserResp'
              type: object
      summary: 修改名称
      tags:
      - 用户管理
  /api/v1/users/updatePassword:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      - description: 修改密码的请求参数
        in: body
        name: UpdateUserReq
        required: true
        schema:
          $ref: '#/definitions/serverDomain.UpdateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  $ref: '#/definitions/serverDomain.UserResp'
              type: object
      summary: 修改密码
      tags:
      - 用户管理
  /api/v1/users/usersNotExistedInProject:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前项目ID
        in: query
        name: currProjectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/_domain.Response'
            - properties:
                data:
                  properties:
                    result:
                      items:
                        $ref: '#/definitions/serverDomain.UserResp'
                      type: array
                  type: object
              type: object
      summary: 获取项目中没有的用户列表
      tags:
      - 用户管理
swagger: "2.0"
